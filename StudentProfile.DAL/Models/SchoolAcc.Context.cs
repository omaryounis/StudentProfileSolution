//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentProfile.DAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SchoolAccGam3aEntities : DbContext
    {
        public SchoolAccGam3aEntities()
            : base("name=SchoolAccGam3aEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AcademicCommittee> AcademicCommittee { get; set; }
        public virtual DbSet<ActivityApprovedPhases> ActivityApprovedPhases { get; set; }
        public virtual DbSet<ActivityConfig> ActivityConfig { get; set; }
        public virtual DbSet<ActivityPhases> ActivityPhases { get; set; }
        public virtual DbSet<ActivityRequestDetails> ActivityRequestDetails { get; set; }
        public virtual DbSet<ActivityRequestMaster> ActivityRequestMaster { get; set; }
        public virtual DbSet<ActivityRequestMasterAttachments> ActivityRequestMasterAttachments { get; set; }
        public virtual DbSet<ActivityRequestsArchive> ActivityRequestsArchive { get; set; }
        public virtual DbSet<ActivityRequestsArchiveAttachments> ActivityRequestsArchiveAttachments { get; set; }
        public virtual DbSet<ActivityUsers> ActivityUsers { get; set; }
        public virtual DbSet<AdvanceApprovedPhases> AdvanceApprovedPhases { get; set; }
        public virtual DbSet<AdvancePaymentDetails> AdvancePaymentDetails { get; set; }
        public virtual DbSet<AdvancePaymentMaster> AdvancePaymentMaster { get; set; }
        public virtual DbSet<AdvancePhases> AdvancePhases { get; set; }
        public virtual DbSet<AdvanceReceiveDetails> AdvanceReceiveDetails { get; set; }
        public virtual DbSet<AdvanceReceiveMaster> AdvanceReceiveMaster { get; set; }
        public virtual DbSet<AdvanceRequest> AdvanceRequest { get; set; }
        public virtual DbSet<AdvanceRequestDetails> AdvanceRequestDetails { get; set; }
        public virtual DbSet<AdvanceRequests> AdvanceRequests { get; set; }
        public virtual DbSet<AdvanceRequestsAttachment> AdvanceRequestsAttachment { get; set; }
        public virtual DbSet<AdvanceSettingConfig> AdvanceSettingConfig { get; set; }
        public virtual DbSet<AdvanceSettings> AdvanceSettings { get; set; }
        public virtual DbSet<AdvancesPremiums> AdvancesPremiums { get; set; }
        public virtual DbSet<AdvanceUsers> AdvanceUsers { get; set; }
        public virtual DbSet<AirPort> AirPort { get; set; }
        public virtual DbSet<AllResidents> AllResidents { get; set; }
        public virtual DbSet<BankAttachments> BankAttachments { get; set; }
        public virtual DbSet<BankCodes> BankCodes { get; set; }
        public virtual DbSet<BrotherDiscountSetting> BrotherDiscountSetting { get; set; }
        public virtual DbSet<Bus> Bus { get; set; }
        public virtual DbSet<Checks> Checks { get; set; }
        public virtual DbSet<ClearanceOfSudents> ClearanceOfSudents { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<CountryPopulation> CountryPopulation { get; set; }
        public virtual DbSet<CustomFields> CustomFields { get; set; }
        public virtual DbSet<Dashboard_FilterGroups> Dashboard_FilterGroups { get; set; }
        public virtual DbSet<Dashboard_FilterGroupUsers> Dashboard_FilterGroupUsers { get; set; }
        public virtual DbSet<DashBoard_Groups> DashBoard_Groups { get; set; }
        public virtual DbSet<Dashboard_SecretPermissions> Dashboard_SecretPermissions { get; set; }
        public virtual DbSet<DashBoard_UserGroups> DashBoard_UserGroups { get; set; }
        public virtual DbSet<DocumentTypes> DocumentTypes { get; set; }
        public virtual DbSet<Emergency> Emergency { get; set; }
        public virtual DbSet<EmergencyRelatives> EmergencyRelatives { get; set; }
        public virtual DbSet<ExchangeOrder> ExchangeOrder { get; set; }
        public virtual DbSet<ExchangeOrdersChecks> ExchangeOrdersChecks { get; set; }
        public virtual DbSet<FinalExit> FinalExit { get; set; }
        public virtual DbSet<GroupPermission> GroupPermission { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<HousingFurnitureCategories> HousingFurnitureCategories { get; set; }
        public virtual DbSet<HousingFurnitures> HousingFurnitures { get; set; }
        public virtual DbSet<HousingFurnituresOfStudent> HousingFurnituresOfStudent { get; set; }
        public virtual DbSet<HousingLocationFurniture> HousingLocationFurniture { get; set; }
        public virtual DbSet<HousingOfSudents> HousingOfSudents { get; set; }
        public virtual DbSet<HousingSupervisors> HousingSupervisors { get; set; }
        public virtual DbSet<HousingSupervisorsRooms> HousingSupervisorsRooms { get; set; }
        public virtual DbSet<INTEGRATION_All_Graduate_Students> INTEGRATION_All_Graduate_Students { get; set; }
        public virtual DbSet<INTEGRATION_All_STUDENTS_EXPECTED_GRADUATES> INTEGRATION_All_STUDENTS_EXPECTED_GRADUATES { get; set; }
        public virtual DbSet<INTEGRATION_All_STUDENTS_EXTRA_CHANCES> INTEGRATION_All_STUDENTS_EXTRA_CHANCES { get; set; }
        public virtual DbSet<INTEGRATION_All_STUDENTS_SEMESTER_TRANS> INTEGRATION_All_STUDENTS_SEMESTER_TRANS { get; set; }
        public virtual DbSet<Issues> Issues { get; set; }
        public virtual DbSet<IssuesCategories> IssuesCategories { get; set; }
        public virtual DbSet<IssuessCategoriesPermissions> IssuessCategoriesPermissions { get; set; }
        public virtual DbSet<MessagesLog> MessagesLog { get; set; }
        public virtual DbSet<Month> Month { get; set; }
        public virtual DbSet<Nationality> Nationality { get; set; }
        public virtual DbSet<OperationTypes> OperationTypes { get; set; }
        public virtual DbSet<Payroll> Payroll { get; set; }
        public virtual DbSet<PayrollApproval> PayrollApproval { get; set; }
        public virtual DbSet<PayrollChecks> PayrollChecks { get; set; }
        public virtual DbSet<PayrollPhases> PayrollPhases { get; set; }
        public virtual DbSet<PayrollPhasesUsers> PayrollPhasesUsers { get; set; }
        public virtual DbSet<PayrollRefusal> PayrollRefusal { get; set; }
        public virtual DbSet<PhasesUsers> PhasesUsers { get; set; }
        public virtual DbSet<PunishmentOrder> PunishmentOrder { get; set; }
        public virtual DbSet<ReportsTemplates> ReportsTemplates { get; set; }
        public virtual DbSet<ReservedVisa> ReservedVisa { get; set; }
        public virtual DbSet<ResidentViolations> ResidentViolations { get; set; }
        public virtual DbSet<RewardCategory> RewardCategory { get; set; }
        public virtual DbSet<RewardDetails> RewardDetails { get; set; }
        public virtual DbSet<RewardItemExpensesTypes> RewardItemExpensesTypes { get; set; }
        public virtual DbSet<RewardItems> RewardItems { get; set; }
        public virtual DbSet<RewardItemTypes> RewardItemTypes { get; set; }
        public virtual DbSet<RewardMaster> RewardMaster { get; set; }
        public virtual DbSet<RewardNationaltity> RewardNationaltity { get; set; }
        public virtual DbSet<Row> Row { get; set; }
        public virtual DbSet<RowLevel> RowLevel { get; set; }
        public virtual DbSet<RunawayAliens> RunawayAliens { get; set; }
        public virtual DbSet<SarafDownloaded> SarafDownloaded { get; set; }
        public virtual DbSet<ScMessages> ScMessages { get; set; }
        public virtual DbSet<ScreenActions> ScreenActions { get; set; }
        public virtual DbSet<Screens> Screens { get; set; }
        public virtual DbSet<ScreenSctionsGroup> ScreenSctionsGroup { get; set; }
        public virtual DbSet<ST_AcademicData> ST_AcademicData { get; set; }
        public virtual DbSet<ST_ScoialMediaAccounts> ST_ScoialMediaAccounts { get; set; }
        public virtual DbSet<StDetails> StDetails { get; set; }
        public virtual DbSet<StTravelRequest> StTravelRequest { get; set; }
        public virtual DbSet<StudentBasicData> StudentBasicData { get; set; }
        public virtual DbSet<StudentDocuments> StudentDocuments { get; set; }
        public virtual DbSet<StudentDocumentsLog> StudentDocumentsLog { get; set; }
        public virtual DbSet<StudentFiles> StudentFiles { get; set; }
        public virtual DbSet<StudentNotes> StudentNotes { get; set; }
        public virtual DbSet<StudentPayroll> StudentPayroll { get; set; }
        public virtual DbSet<StudentsCustomFields> StudentsCustomFields { get; set; }
        public virtual DbSet<StudentsTicketsDetails> StudentsTicketsDetails { get; set; }
        public virtual DbSet<StudentsTravelOrder> StudentsTravelOrder { get; set; }
        public virtual DbSet<TransportationTracking> TransportationTracking { get; set; }
        public virtual DbSet<TravelAdvertisement> TravelAdvertisement { get; set; }
        public virtual DbSet<TravelOrderDetails> TravelOrderDetails { get; set; }
        public virtual DbSet<TravelOrderPhase> TravelOrderPhase { get; set; }
        public virtual DbSet<TravelOrders> TravelOrders { get; set; }
        public virtual DbSet<UniversityStudents> UniversityStudents { get; set; }
        public virtual DbSet<UpdateStudentLog> UpdateStudentLog { get; set; }
        public virtual DbSet<ViolationForwords> ViolationForwords { get; set; }
        public virtual DbSet<ViolationOfStudents> ViolationOfStudents { get; set; }
        public virtual DbSet<ViolationOfStudentsAttachment> ViolationOfStudentsAttachment { get; set; }
        public virtual DbSet<ViolationsDecisions> ViolationsDecisions { get; set; }
        public virtual DbSet<Year> Year { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<INTEGRATION_All_Students> INTEGRATION_All_Students { get; set; }
        public virtual DbSet<Purposes> Purposes { get; set; }
        public virtual DbSet<ESOL_ACADEMIC_RECORDS> ESOL_ACADEMIC_RECORDS { get; set; }
        public virtual DbSet<V_SIS_VIOLATION_SINGLE> V_SIS_VIOLATION_SINGLE { get; set; }
        public virtual DbSet<vw_Get_AdvanceSetting_DSource> vw_Get_AdvanceSetting_DSource { get; set; }
        public virtual DbSet<vw_GetAllRewardCategories> vw_GetAllRewardCategories { get; set; }
        public virtual DbSet<vw_GetAllRewards> vw_GetAllRewards { get; set; }
        public virtual DbSet<config> config { get; set; }
        public virtual DbSet<DashBoard_Users> DashBoard_Users { get; set; }
        public virtual DbSet<AcademicCommitteeUsers> AcademicCommitteeUsers { get; set; }
        public virtual DbSet<AcademicCommitteeUsersPerm> AcademicCommitteeUsersPerm { get; set; }
        public virtual DbSet<INTEGRATION_All_STUDENTS_GRADUATES_WARNING> INTEGRATION_All_STUDENTS_GRADUATES_WARNING { get; set; }
    
        [DbFunction("SchoolAccGam3aEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string text, string delimiter)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[SchoolAccGam3aEntities].[fn_Split](@text, @delimiter)", textParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<Get_studentswithoutAccount_NO_Result> Get_studentswithoutAccount_NO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_studentswithoutAccount_NO_Result>("Get_studentswithoutAccount_NO");
        }
    
        public virtual ObjectResult<Get_studentswithoutAccount_NO_Custom_Result> Get_studentswithoutAccount_NO_Custom(string facultyNumber, string degreeLevel, string acadimicStatus, string level)
        {
            var facultyNumberParameter = facultyNumber != null ?
                new ObjectParameter("FacultyNumber", facultyNumber) :
                new ObjectParameter("FacultyNumber", typeof(string));
    
            var degreeLevelParameter = degreeLevel != null ?
                new ObjectParameter("DegreeLevel", degreeLevel) :
                new ObjectParameter("DegreeLevel", typeof(string));
    
            var acadimicStatusParameter = acadimicStatus != null ?
                new ObjectParameter("AcadimicStatus", acadimicStatus) :
                new ObjectParameter("AcadimicStatus", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_studentswithoutAccount_NO_Custom_Result>("Get_studentswithoutAccount_NO_Custom", facultyNumberParameter, degreeLevelParameter, acadimicStatusParameter, levelParameter);
        }
    
        public virtual ObjectResult<GetALLBedLocationsBasedOnRoomId_SP_Result> GetALLBedLocationsBasedOnRoomId_SP(Nullable<int> roomId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetALLBedLocationsBasedOnRoomId_SP_Result>("GetALLBedLocationsBasedOnRoomId_SP", roomIdParameter);
        }
    
        public virtual ObjectResult<GetAlmostNotValidResidents_Result> GetAlmostNotValidResidents(string nationality, Nullable<int> restDays)
        {
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlmostNotValidResidents_Result>("GetAlmostNotValidResidents", nationalityParameter, restDaysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAvailableFurniture_SP(Nullable<int> furnitureId, Nullable<int> locationId)
        {
            var furnitureIdParameter = furnitureId.HasValue ?
                new ObjectParameter("FurnitureId", furnitureId) :
                new ObjectParameter("FurnitureId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAvailableFurniture_SP", furnitureIdParameter, locationIdParameter);
        }
    
        public virtual ObjectResult<GetPayrollDetails_Result> GetPayrollDetails(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("payrollID", payrollID) :
                new ObjectParameter("payrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPayrollDetails_Result>("GetPayrollDetails", payrollIDParameter);
        }
    
        public virtual ObjectResult<GetStBasicDataByStudentID_Result> GetStBasicDataByStudentID(Nullable<int> student_ID)
        {
            var student_IDParameter = student_ID.HasValue ?
                new ObjectParameter("Student_ID", student_ID) :
                new ObjectParameter("Student_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStBasicDataByStudentID_Result>("GetStBasicDataByStudentID", student_IDParameter);
        }
    
        public virtual ObjectResult<GetStudentFurnitures_SP_Result> GetStudentFurnitures_SP(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentFurnitures_SP_Result>("GetStudentFurnitures_SP", studentIdParameter);
        }
    
        public virtual ObjectResult<getTravelLine_Result> getTravelLine()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTravelLine_Result>("getTravelLine");
        }
    
        public virtual ObjectResult<HousingFurniture_Customize_SP_Result> HousingFurniture_Customize_SP(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HousingFurniture_Customize_SP_Result>("HousingFurniture_Customize_SP", locationIdParameter);
        }
    
        public virtual ObjectResult<HousingFurnitureCategories_SP_Result> HousingFurnitureCategories_SP(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HousingFurnitureCategories_SP_Result>("HousingFurnitureCategories_SP", locationIdParameter);
        }
    
        public virtual ObjectResult<PR_GetAllCountriesPopulation_Result> PR_GetAllCountriesPopulation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetAllCountriesPopulation_Result>("PR_GetAllCountriesPopulation");
        }
    
        public virtual ObjectResult<PR_GetAllRepoerts_Result> PR_GetAllRepoerts(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetAllRepoerts_Result>("PR_GetAllRepoerts", userIDParameter);
        }
    
        public virtual ObjectResult<PR_GetReportById_Result> PR_GetReportById(Nullable<int> reportId, Nullable<int> userID)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetReportById_Result>("PR_GetReportById", reportIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_GetStudentAlertsCount_Result> PR_GetStudentAlertsCount(Nullable<decimal> studentID, string nationalID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(decimal));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetStudentAlertsCount_Result>("PR_GetStudentAlertsCount", studentIDParameter, nationalIDParameter);
        }
    
        public virtual ObjectResult<PR_GetStudentByName_Result> PR_GetStudentByName(string firstName, string name, string lastName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetStudentByName_Result>("PR_GetStudentByName", firstNameParameter, nameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<PR_StudentProfileLogin_Result> PR_StudentProfileLogin(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_StudentProfileLogin_Result>("PR_StudentProfileLogin", tokenParameter);
        }
    
        public virtual ObjectResult<proc_GetAlertsCount_Result> proc_GetAlertsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAlertsCount_Result>("proc_GetAlertsCount");
        }
    
        public virtual ObjectResult<proc_GetRunawayAliens_Result> proc_GetRunawayAliens()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetRunawayAliens_Result>("proc_GetRunawayAliens");
        }
    
        public virtual ObjectResult<proc_GetStudentGrades_Result> proc_GetStudentGrades(Nullable<decimal> studentId, Nullable<int> semesterId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(decimal));
    
            var semesterIdParameter = semesterId.HasValue ?
                new ObjectParameter("SemesterId", semesterId) :
                new ObjectParameter("SemesterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetStudentGrades_Result>("proc_GetStudentGrades", studentIdParameter, semesterIdParameter);
        }
    
        public virtual ObjectResult<proc_GetStudentsViolations_Result> proc_GetStudentsViolations(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetStudentsViolations_Result>("proc_GetStudentsViolations", studentIdParameter);
        }
    
        public virtual ObjectResult<proc_GetStudentsViolationsForNonRegularStudents_Result> proc_GetStudentsViolationsForNonRegularStudents(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetStudentsViolationsForNonRegularStudents_Result>("proc_GetStudentsViolationsForNonRegularStudents", studentIdParameter);
        }
    
        public virtual ObjectResult<RPT_TravelStudentReport_Result> RPT_TravelStudentReport(string nATIONALITY_CODE, Nullable<int> sTUDENT_ID)
        {
            var nATIONALITY_CODEParameter = nATIONALITY_CODE != null ?
                new ObjectParameter("NATIONALITY_CODE", nATIONALITY_CODE) :
                new ObjectParameter("NATIONALITY_CODE", typeof(string));
    
            var sTUDENT_IDParameter = sTUDENT_ID.HasValue ?
                new ObjectParameter("STUDENT_ID", sTUDENT_ID) :
                new ObjectParameter("STUDENT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_TravelStudentReport_Result>("RPT_TravelStudentReport", nATIONALITY_CODEParameter, sTUDENT_IDParameter);
        }
    
        public virtual ObjectResult<SP_GetAllHousingStudents_Names_Result> SP_GetAllHousingStudents_Names()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllHousingStudents_Names_Result>("SP_GetAllHousingStudents_Names");
        }
    
        public virtual ObjectResult<SP_GetAllStudentNames_Result> SP_GetAllStudentNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllStudentNames_Result>("SP_GetAllStudentNames");
        }
    
        public virtual ObjectResult<SP_GetCurrentStudents_DDL_Result> SP_GetCurrentStudents_DDL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCurrentStudents_DDL_Result>("SP_GetCurrentStudents_DDL");
        }
    
        public virtual ObjectResult<SP_GetStudentById_Result> SP_GetStudentById(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStudentById_Result>("SP_GetStudentById", studentIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudentDataForTravel_Result> Sp_GetStudentDataForTravel(string national_ID)
        {
            var national_IDParameter = national_ID != null ?
                new ObjectParameter("National_ID", national_ID) :
                new ObjectParameter("National_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudentDataForTravel_Result>("Sp_GetStudentDataForTravel", national_IDParameter);
        }
    
        public virtual ObjectResult<Sp_GetTravelAdvertisement_Customize_Result> Sp_GetTravelAdvertisement_Customize()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTravelAdvertisement_Customize_Result>("Sp_GetTravelAdvertisement_Customize");
        }
    
        public virtual ObjectResult<usp_getDegrees_Result> usp_getDegrees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getDegrees_Result>("usp_getDegrees");
        }
    
        public virtual ObjectResult<usp_getFaculties_Result> usp_getFaculties()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getFaculties_Result>("usp_getFaculties");
        }
    
        public virtual ObjectResult<Usp_GetFreeTravelRequests_Result> Usp_GetFreeTravelRequests(string adID)
        {
            var adIDParameter = adID != null ?
                new ObjectParameter("AdID", adID) :
                new ObjectParameter("AdID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetFreeTravelRequests_Result>("Usp_GetFreeTravelRequests", adIDParameter);
        }
    
        public virtual ObjectResult<usp_getLevels_Result> usp_getLevels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getLevels_Result>("usp_getLevels");
        }
    
        public virtual ObjectResult<usp_getMajors_Result> usp_getMajors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getMajors_Result>("usp_getMajors");
        }
    
        public virtual ObjectResult<usp_GetMonths_Result> usp_GetMonths()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMonths_Result>("usp_GetMonths");
        }
    
        public virtual ObjectResult<usp_getNationalities_Result> usp_getNationalities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getNationalities_Result>("usp_getNationalities");
        }
    
        public virtual ObjectResult<Usp_GetStudentsNotes_Result> Usp_GetStudentsNotes(string issues)
        {
            var issuesParameter = issues != null ?
                new ObjectParameter("Issues", issues) :
                new ObjectParameter("Issues", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetStudentsNotes_Result>("Usp_GetStudentsNotes", issuesParameter);
        }
    
        public virtual ObjectResult<Usp_GetStudentTravelOrder_Result> Usp_GetStudentTravelOrder(Nullable<int> adID, Nullable<int> stdID)
        {
            var adIDParameter = adID.HasValue ?
                new ObjectParameter("AdID", adID) :
                new ObjectParameter("AdID", typeof(int));
    
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetStudentTravelOrder_Result>("Usp_GetStudentTravelOrder", adIDParameter, stdIDParameter);
        }
    
        public virtual ObjectResult<usp_getStudyTypes_Result> usp_getStudyTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getStudyTypes_Result>("usp_getStudyTypes");
        }
    
        public virtual ObjectResult<usp_School_Select_Result> usp_School_Select(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_School_Select_Result>("usp_School_Select", iDParameter);
        }
    
        public virtual ObjectResult<usp_Student_Select_Result> usp_Student_Select(Nullable<int> rowLevelID, Nullable<int> stDetailID, Nullable<int> rowIID, Nullable<int> levelID, Nullable<int> genderID, Nullable<int> studentStatus)
        {
            var rowLevelIDParameter = rowLevelID.HasValue ?
                new ObjectParameter("RowLevelID", rowLevelID) :
                new ObjectParameter("RowLevelID", typeof(int));
    
            var stDetailIDParameter = stDetailID.HasValue ?
                new ObjectParameter("stDetailID", stDetailID) :
                new ObjectParameter("stDetailID", typeof(int));
    
            var rowIIDParameter = rowIID.HasValue ?
                new ObjectParameter("RowIID", rowIID) :
                new ObjectParameter("RowIID", typeof(int));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var genderIDParameter = genderID.HasValue ?
                new ObjectParameter("GenderID", genderID) :
                new ObjectParameter("GenderID", typeof(int));
    
            var studentStatusParameter = studentStatus.HasValue ?
                new ObjectParameter("StudentStatus", studentStatus) :
                new ObjectParameter("StudentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Student_Select_Result>("usp_Student_Select", rowLevelIDParameter, stDetailIDParameter, rowIIDParameter, levelIDParameter, genderIDParameter, studentStatusParameter);
        }
    
        public virtual ObjectResult<usp_Students_Select_byUnitID_Result> usp_Students_Select_byUnitID(Nullable<int> unitID, Nullable<int> deptID, Nullable<int> studentStatus)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var studentStatusParameter = studentStatus.HasValue ?
                new ObjectParameter("StudentStatus", studentStatus) :
                new ObjectParameter("StudentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Students_Select_byUnitID_Result>("usp_Students_Select_byUnitID", unitIDParameter, deptIDParameter, studentStatusParameter);
        }
    
        public virtual int Get_AcademicActivities_StudentId_SP(Nullable<int> student_Id)
        {
            var student_IdParameter = student_Id.HasValue ?
                new ObjectParameter("Student_Id", student_Id) :
                new ObjectParameter("Student_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_AcademicActivities_StudentId_SP", student_IdParameter);
        }
    
        public virtual ObjectResult<HousingFurnitures_SP_Result> HousingFurnitures_SP(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HousingFurnitures_SP_Result>("HousingFurnitures_SP", categoryIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllStudent_Names_Customize_Result> SP_GetAllStudent_Names_Customize()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllStudent_Names_Customize_Result>("SP_GetAllStudent_Names_Customize");
        }
    
        public virtual ObjectResult<SP_GetAllStudents_Customize_Result> SP_GetAllStudents_Customize(Nullable<int> sTUDENT_ID)
        {
            var sTUDENT_IDParameter = sTUDENT_ID.HasValue ?
                new ObjectParameter("STUDENT_ID", sTUDENT_ID) :
                new ObjectParameter("STUDENT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllStudents_Customize_Result>("SP_GetAllStudents_Customize", sTUDENT_IDParameter);
        }
    
        public virtual ObjectResult<SP_GetCurrentandLatestGraduatedStudents_Result> SP_GetCurrentandLatestGraduatedStudents(string faculities, string degrees, string lastYear)
        {
            var faculitiesParameter = faculities != null ?
                new ObjectParameter("faculities", faculities) :
                new ObjectParameter("faculities", typeof(string));
    
            var degreesParameter = degrees != null ?
                new ObjectParameter("Degrees", degrees) :
                new ObjectParameter("Degrees", typeof(string));
    
            var lastYearParameter = lastYear != null ?
                new ObjectParameter("LastYear", lastYear) :
                new ObjectParameter("LastYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCurrentandLatestGraduatedStudents_Result>("SP_GetCurrentandLatestGraduatedStudents", faculitiesParameter, degreesParameter, lastYearParameter);
        }
    
        public virtual ObjectResult<SP_GetRewardDetailsList_Result> SP_GetRewardDetailsList(Nullable<int> fACULTY_NO, Nullable<int> dEGREE_CODE, Nullable<int> sTATUS_CODE, Nullable<int> nationalityId, Nullable<int> sTUDY_CODE, Nullable<int> cATEGORY_CODE, string rewardItemsList)
        {
            var fACULTY_NOParameter = fACULTY_NO.HasValue ?
                new ObjectParameter("FACULTY_NO", fACULTY_NO) :
                new ObjectParameter("FACULTY_NO", typeof(int));
    
            var dEGREE_CODEParameter = dEGREE_CODE.HasValue ?
                new ObjectParameter("DEGREE_CODE", dEGREE_CODE) :
                new ObjectParameter("DEGREE_CODE", typeof(int));
    
            var sTATUS_CODEParameter = sTATUS_CODE.HasValue ?
                new ObjectParameter("STATUS_CODE", sTATUS_CODE) :
                new ObjectParameter("STATUS_CODE", typeof(int));
    
            var nationalityIdParameter = nationalityId.HasValue ?
                new ObjectParameter("nationalityId", nationalityId) :
                new ObjectParameter("nationalityId", typeof(int));
    
            var sTUDY_CODEParameter = sTUDY_CODE.HasValue ?
                new ObjectParameter("STUDY_CODE", sTUDY_CODE) :
                new ObjectParameter("STUDY_CODE", typeof(int));
    
            var cATEGORY_CODEParameter = cATEGORY_CODE.HasValue ?
                new ObjectParameter("CATEGORY_CODE", cATEGORY_CODE) :
                new ObjectParameter("CATEGORY_CODE", typeof(int));
    
            var rewardItemsListParameter = rewardItemsList != null ?
                new ObjectParameter("RewardItemsList", rewardItemsList) :
                new ObjectParameter("RewardItemsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRewardDetailsList_Result>("SP_GetRewardDetailsList", fACULTY_NOParameter, dEGREE_CODEParameter, sTATUS_CODEParameter, nationalityIdParameter, sTUDY_CODEParameter, cATEGORY_CODEParameter, rewardItemsListParameter);
        }
    
        public virtual ObjectResult<SP_PayrollRefusal_Result> SP_PayrollRefusal(string fACULTY_NO, string dEGREE_CODE, string sTUDENT_ID, string sTATUS_CODE, string nATIONALITY_CODE, string rewardItemIds, string rewardCategoryIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> endDate)
        {
            var fACULTY_NOParameter = fACULTY_NO != null ?
                new ObjectParameter("FACULTY_NO", fACULTY_NO) :
                new ObjectParameter("FACULTY_NO", typeof(string));
    
            var dEGREE_CODEParameter = dEGREE_CODE != null ?
                new ObjectParameter("DEGREE_CODE", dEGREE_CODE) :
                new ObjectParameter("DEGREE_CODE", typeof(string));
    
            var sTUDENT_IDParameter = sTUDENT_ID != null ?
                new ObjectParameter("STUDENT_ID", sTUDENT_ID) :
                new ObjectParameter("STUDENT_ID", typeof(string));
    
            var sTATUS_CODEParameter = sTATUS_CODE != null ?
                new ObjectParameter("STATUS_CODE", sTATUS_CODE) :
                new ObjectParameter("STATUS_CODE", typeof(string));
    
            var nATIONALITY_CODEParameter = nATIONALITY_CODE != null ?
                new ObjectParameter("NATIONALITY_CODE", nATIONALITY_CODE) :
                new ObjectParameter("NATIONALITY_CODE", typeof(string));
    
            var rewardItemIdsParameter = rewardItemIds != null ?
                new ObjectParameter("RewardItemIds", rewardItemIds) :
                new ObjectParameter("RewardItemIds", typeof(string));
    
            var rewardCategoryIdsParameter = rewardCategoryIds != null ?
                new ObjectParameter("RewardCategoryIds", rewardCategoryIds) :
                new ObjectParameter("RewardCategoryIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PayrollRefusal_Result>("SP_PayrollRefusal", fACULTY_NOParameter, dEGREE_CODEParameter, sTUDENT_IDParameter, sTATUS_CODEParameter, nATIONALITY_CODEParameter, rewardItemIdsParameter, rewardCategoryIdsParameter, fromDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> Tafkeet_Sp(Nullable<decimal> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tafkeet_Sp", numberParameter);
        }
    
        public virtual int Usp_GetFreeTravelRequests_Customize(string adID)
        {
            var adIDParameter = adID != null ?
                new ObjectParameter("AdID", adID) :
                new ObjectParameter("AdID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GetFreeTravelRequests_Customize", adIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetLastDocNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetLastDocNumber");
        }
    
        public virtual ObjectResult<usp_GetRewardCategory_Intg_Result> usp_GetRewardCategory_Intg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRewardCategory_Intg_Result>("usp_GetRewardCategory_Intg");
        }
    
        public virtual ObjectResult<usp_GetStudentsForTickets_Result> usp_GetStudentsForTickets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStudentsForTickets_Result>("usp_GetStudentsForTickets");
        }
    
        public virtual int Acc_StatmentByLevel5(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<long> cOAID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var cOAIDParameter = cOAID.HasValue ?
                new ObjectParameter("COAID", cOAID) :
                new ObjectParameter("COAID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Acc_StatmentByLevel5", dateFromParameter, dateToParameter, cOAIDParameter);
        }
    
        public virtual int ExpansesRevenue_Multi(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string comID, Nullable<int> parnetID, Nullable<int> jobID, Nullable<int> levelID, string cOACode, Nullable<bool> postedDateFlage, string fsyID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var comIDParameter = comID != null ?
                new ObjectParameter("ComID", comID) :
                new ObjectParameter("ComID", typeof(string));
    
            var parnetIDParameter = parnetID.HasValue ?
                new ObjectParameter("parnetID", parnetID) :
                new ObjectParameter("parnetID", typeof(int));
    
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("jobID", jobID) :
                new ObjectParameter("jobID", typeof(int));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var cOACodeParameter = cOACode != null ?
                new ObjectParameter("COACode", cOACode) :
                new ObjectParameter("COACode", typeof(string));
    
            var postedDateFlageParameter = postedDateFlage.HasValue ?
                new ObjectParameter("PostedDateFlage", postedDateFlage) :
                new ObjectParameter("PostedDateFlage", typeof(bool));
    
            var fsyIDParameter = fsyID != null ?
                new ObjectParameter("FsyID", fsyID) :
                new ObjectParameter("FsyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpansesRevenue_Multi", dateFromParameter, dateToParameter, comIDParameter, parnetIDParameter, jobIDParameter, levelIDParameter, cOACodeParameter, postedDateFlageParameter, fsyIDParameter);
        }
    
        [DbFunction("SchoolAccGam3aEntities", "fn_CheckCOAHasJournalsForMainAccount")]
        public virtual IQueryable<fn_CheckCOAHasJournalsForMainAccount_Result> fn_CheckCOAHasJournalsForMainAccount(Nullable<int> cOA_ID)
        {
            var cOA_IDParameter = cOA_ID.HasValue ?
                new ObjectParameter("COA_ID", cOA_ID) :
                new ObjectParameter("COA_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CheckCOAHasJournalsForMainAccount_Result>("[SchoolAccGam3aEntities].[fn_CheckCOAHasJournalsForMainAccount](@COA_ID)", cOA_IDParameter);
        }
    
        public virtual ObjectResult<PR_GetAdvancedSearchResults_Result> PR_GetAdvancedSearchResults(string fName, string inName, string lName, string identityNum, Nullable<decimal> studentId, string phoneNum, string fieldtype, string nationality, string degree, Nullable<decimal> faculty, Nullable<decimal> level, string statusType, Nullable<decimal> studyType, Nullable<bool> validbutNotExist, string sysType, string notinFields)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("lName", lName) :
                new ObjectParameter("lName", typeof(string));
    
            var identityNumParameter = identityNum != null ?
                new ObjectParameter("IdentityNum", identityNum) :
                new ObjectParameter("IdentityNum", typeof(string));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(decimal));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("PhoneNum", phoneNum) :
                new ObjectParameter("PhoneNum", typeof(string));
    
            var fieldtypeParameter = fieldtype != null ?
                new ObjectParameter("fieldtype", fieldtype) :
                new ObjectParameter("fieldtype", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("nationality", nationality) :
                new ObjectParameter("nationality", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(string));
    
            var facultyParameter = faculty.HasValue ?
                new ObjectParameter("faculty", faculty) :
                new ObjectParameter("faculty", typeof(decimal));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(decimal));
    
            var statusTypeParameter = statusType != null ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(string));
    
            var studyTypeParameter = studyType.HasValue ?
                new ObjectParameter("StudyType", studyType) :
                new ObjectParameter("StudyType", typeof(decimal));
    
            var validbutNotExistParameter = validbutNotExist.HasValue ?
                new ObjectParameter("validbutNotExist", validbutNotExist) :
                new ObjectParameter("validbutNotExist", typeof(bool));
    
            var sysTypeParameter = sysType != null ?
                new ObjectParameter("SysType", sysType) :
                new ObjectParameter("SysType", typeof(string));
    
            var notinFieldsParameter = notinFields != null ?
                new ObjectParameter("NotinFields", notinFields) :
                new ObjectParameter("NotinFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_GetAdvancedSearchResults_Result>("PR_GetAdvancedSearchResults", fNameParameter, inNameParameter, lNameParameter, identityNumParameter, studentIdParameter, phoneNumParameter, fieldtypeParameter, nationalityParameter, degreeParameter, facultyParameter, levelParameter, statusTypeParameter, studyTypeParameter, validbutNotExistParameter, sysTypeParameter, notinFieldsParameter);
        }
    
        public virtual ObjectResult<RPT_TravelStudentDetailsReport_Result> RPT_TravelStudentDetailsReport(string nATIONALITY_CODE, Nullable<int> sTUDENT_ID, Nullable<int> travelOrderID)
        {
            var nATIONALITY_CODEParameter = nATIONALITY_CODE != null ?
                new ObjectParameter("NATIONALITY_CODE", nATIONALITY_CODE) :
                new ObjectParameter("NATIONALITY_CODE", typeof(string));
    
            var sTUDENT_IDParameter = sTUDENT_ID.HasValue ?
                new ObjectParameter("STUDENT_ID", sTUDENT_ID) :
                new ObjectParameter("STUDENT_ID", typeof(int));
    
            var travelOrderIDParameter = travelOrderID.HasValue ?
                new ObjectParameter("TravelOrderID", travelOrderID) :
                new ObjectParameter("TravelOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_TravelStudentDetailsReport_Result>("RPT_TravelStudentDetailsReport", nATIONALITY_CODEParameter, sTUDENT_IDParameter, travelOrderIDParameter);
        }
    
        public virtual ObjectResult<SP_GetNotCurrentStudents_Result> SP_GetNotCurrentStudents(string faculities, string degrees, string stdCodes)
        {
            var faculitiesParameter = faculities != null ?
                new ObjectParameter("faculities", faculities) :
                new ObjectParameter("faculities", typeof(string));
    
            var degreesParameter = degrees != null ?
                new ObjectParameter("Degrees", degrees) :
                new ObjectParameter("Degrees", typeof(string));
    
            var stdCodesParameter = stdCodes != null ?
                new ObjectParameter("StdCodes", stdCodes) :
                new ObjectParameter("StdCodes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNotCurrentStudents_Result>("SP_GetNotCurrentStudents", faculitiesParameter, degreesParameter, stdCodesParameter);
        }
    
        public virtual ObjectResult<SP_GetRewardDetailsListForSelectedStudents_Result> SP_GetRewardDetailsListForSelectedStudents(string students, string rewardItemsList)
        {
            var studentsParameter = students != null ?
                new ObjectParameter("Students", students) :
                new ObjectParameter("Students", typeof(string));
    
            var rewardItemsListParameter = rewardItemsList != null ?
                new ObjectParameter("RewardItemsList", rewardItemsList) :
                new ObjectParameter("RewardItemsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRewardDetailsListForSelectedStudents_Result>("SP_GetRewardDetailsListForSelectedStudents", studentsParameter, rewardItemsListParameter);
        }
    
        public virtual int updateFromLinkedServer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateFromLinkedServer");
        }
    
        public virtual int updateGraduateStudentsFromLinkedServer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateGraduateStudentsFromLinkedServer");
        }
    
        public virtual ObjectResult<Usp_CalcResidance_Result> Usp_CalcResidance(string idNumber, string passportNumber, Nullable<int> userID, string passportExpDateG, string residenceExpDateG)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var passportExpDateGParameter = passportExpDateG != null ?
                new ObjectParameter("PassportExpDateG", passportExpDateG) :
                new ObjectParameter("PassportExpDateG", typeof(string));
    
            var residenceExpDateGParameter = residenceExpDateG != null ?
                new ObjectParameter("ResidenceExpDateG", residenceExpDateG) :
                new ObjectParameter("ResidenceExpDateG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_CalcResidance_Result>("Usp_CalcResidance", idNumberParameter, passportNumberParameter, userIDParameter, passportExpDateGParameter, residenceExpDateGParameter);
        }
    
        public virtual int Usp_CalcRewardsForNonUsualStudents(string studentsIds, Nullable<System.DateTime> payrollDate, string rewardItemsList)
        {
            var studentsIdsParameter = studentsIds != null ?
                new ObjectParameter("StudentsIds", studentsIds) :
                new ObjectParameter("StudentsIds", typeof(string));
    
            var payrollDateParameter = payrollDate.HasValue ?
                new ObjectParameter("PayrollDate", payrollDate) :
                new ObjectParameter("PayrollDate", typeof(System.DateTime));
    
            var rewardItemsListParameter = rewardItemsList != null ?
                new ObjectParameter("RewardItemsList", rewardItemsList) :
                new ObjectParameter("RewardItemsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CalcRewardsForNonUsualStudents", studentsIdsParameter, payrollDateParameter, rewardItemsListParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_CalcStudentsRewards(string studentsIds, Nullable<System.DateTime> payrollDate, string rewardItemsList)
        {
            var studentsIdsParameter = studentsIds != null ?
                new ObjectParameter("StudentsIds", studentsIds) :
                new ObjectParameter("StudentsIds", typeof(string));
    
            var payrollDateParameter = payrollDate.HasValue ?
                new ObjectParameter("PayrollDate", payrollDate) :
                new ObjectParameter("PayrollDate", typeof(System.DateTime));
    
            var rewardItemsListParameter = rewardItemsList != null ?
                new ObjectParameter("RewardItemsList", rewardItemsList) :
                new ObjectParameter("RewardItemsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_CalcStudentsRewards", studentsIdsParameter, payrollDateParameter, rewardItemsListParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_CalcStudentsRewardWithAdvances(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_CalcStudentsRewardWithAdvances", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<usp_COA_Select_ByCoaID_Result> usp_COA_Select_ByCoaID(Nullable<int> cOA_ID)
        {
            var cOA_IDParameter = cOA_ID.HasValue ?
                new ObjectParameter("COA_ID", cOA_ID) :
                new ObjectParameter("COA_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_COA_Select_ByCoaID_Result>("usp_COA_Select_ByCoaID", cOA_IDParameter);
        }
    
        public virtual ObjectResult<Usp_DelveringToStudents_Result> Usp_DelveringToStudents(Nullable<int> payrollID, string yearID, string monthID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var yearIDParameter = yearID != null ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(string));
    
            var monthIDParameter = monthID != null ?
                new ObjectParameter("MonthID", monthID) :
                new ObjectParameter("MonthID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_DelveringToStudents_Result>("Usp_DelveringToStudents", payrollIDParameter, yearIDParameter, monthIDParameter);
        }
    
        public virtual int Usp_GenerateNewTravelOrders(Nullable<int> userID, Nullable<int> type)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GenerateNewTravelOrders", userIDParameter, typeParameter);
        }
    
        public virtual int Usp_GenerateTravelOrders(Nullable<int> orderType)
        {
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GenerateTravelOrders", orderTypeParameter);
        }
    
        public virtual ObjectResult<usp_get_academic_students_Result> usp_get_academic_students(string fACULTY_ID, string dEGREE_ID)
        {
            var fACULTY_IDParameter = fACULTY_ID != null ?
                new ObjectParameter("FACULTY_ID", fACULTY_ID) :
                new ObjectParameter("FACULTY_ID", typeof(string));
    
            var dEGREE_IDParameter = dEGREE_ID != null ?
                new ObjectParameter("DEGREE_ID", dEGREE_ID) :
                new ObjectParameter("DEGREE_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_academic_students_Result>("usp_get_academic_students", fACULTY_IDParameter, dEGREE_IDParameter);
        }
    
        public virtual ObjectResult<Usp_Get_AcademicCommittee_Students_Result> Usp_Get_AcademicCommittee_Students(string fACULTY_ID, string dEGREE_ID, Nullable<decimal> studentsComboBox, Nullable<System.DateTime> createDateFrom, Nullable<System.DateTime> createDateTo, Nullable<System.DateTime> decisionDateFrom, Nullable<System.DateTime> decisionDateTo, Nullable<bool> isAccept)
        {
            var fACULTY_IDParameter = fACULTY_ID != null ?
                new ObjectParameter("FACULTY_ID", fACULTY_ID) :
                new ObjectParameter("FACULTY_ID", typeof(string));
    
            var dEGREE_IDParameter = dEGREE_ID != null ?
                new ObjectParameter("DEGREE_ID", dEGREE_ID) :
                new ObjectParameter("DEGREE_ID", typeof(string));
    
            var studentsComboBoxParameter = studentsComboBox.HasValue ?
                new ObjectParameter("StudentsComboBox", studentsComboBox) :
                new ObjectParameter("StudentsComboBox", typeof(decimal));
    
            var createDateFromParameter = createDateFrom.HasValue ?
                new ObjectParameter("CreateDateFrom", createDateFrom) :
                new ObjectParameter("CreateDateFrom", typeof(System.DateTime));
    
            var createDateToParameter = createDateTo.HasValue ?
                new ObjectParameter("CreateDateTo", createDateTo) :
                new ObjectParameter("CreateDateTo", typeof(System.DateTime));
    
            var decisionDateFromParameter = decisionDateFrom.HasValue ?
                new ObjectParameter("DecisionDateFrom", decisionDateFrom) :
                new ObjectParameter("DecisionDateFrom", typeof(System.DateTime));
    
            var decisionDateToParameter = decisionDateTo.HasValue ?
                new ObjectParameter("DecisionDateTo", decisionDateTo) :
                new ObjectParameter("DecisionDateTo", typeof(System.DateTime));
    
            var isAcceptParameter = isAccept.HasValue ?
                new ObjectParameter("IsAccept", isAccept) :
                new ObjectParameter("IsAccept", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Get_AcademicCommittee_Students_Result>("Usp_Get_AcademicCommittee_Students", fACULTY_IDParameter, dEGREE_IDParameter, studentsComboBoxParameter, createDateFromParameter, createDateToParameter, decisionDateFromParameter, decisionDateToParameter, isAcceptParameter);
        }
    
        public virtual ObjectResult<USP_GET_ACTIVE_ACADEMICUSERSFACULTIES_Result> USP_GET_ACTIVE_ACADEMICUSERSFACULTIES(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ACTIVE_ACADEMICUSERSFACULTIES_Result>("USP_GET_ACTIVE_ACADEMICUSERSFACULTIES", userIDParameter);
        }
    
        public virtual ObjectResult<usp_get_active_students_docs_Result> usp_get_active_students_docs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_active_students_docs_Result>("usp_get_active_students_docs");
        }
    
        public virtual ObjectResult<usp_get_new_students_docs_Result> usp_get_new_students_docs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_new_students_docs_Result>("usp_get_new_students_docs");
        }
    
        public virtual ObjectResult<usp_get_not_take_des_academic_students_Result> usp_get_not_take_des_academic_students(string fACULTY_ID, string dEGREE_ID)
        {
            var fACULTY_IDParameter = fACULTY_ID != null ?
                new ObjectParameter("FACULTY_ID", fACULTY_ID) :
                new ObjectParameter("FACULTY_ID", typeof(string));
    
            var dEGREE_IDParameter = dEGREE_ID != null ?
                new ObjectParameter("DEGREE_ID", dEGREE_ID) :
                new ObjectParameter("DEGREE_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_not_take_des_academic_students_Result>("usp_get_not_take_des_academic_students", fACULTY_IDParameter, dEGREE_IDParameter);
        }
    
        public virtual ObjectResult<Usp_GetAdvancesPaymentByUsers_Result> Usp_GetAdvancesPaymentByUsers(Nullable<System.DateTime> advanceStartDate, Nullable<System.DateTime> advanceEndDate, Nullable<int> docNumber, string type, string userIDs)
        {
            var advanceStartDateParameter = advanceStartDate.HasValue ?
                new ObjectParameter("AdvanceStartDate", advanceStartDate) :
                new ObjectParameter("AdvanceStartDate", typeof(System.DateTime));
    
            var advanceEndDateParameter = advanceEndDate.HasValue ?
                new ObjectParameter("AdvanceEndDate", advanceEndDate) :
                new ObjectParameter("AdvanceEndDate", typeof(System.DateTime));
    
            var docNumberParameter = docNumber.HasValue ?
                new ObjectParameter("DocNumber", docNumber) :
                new ObjectParameter("DocNumber", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var userIDsParameter = userIDs != null ?
                new ObjectParameter("UserIDs", userIDs) :
                new ObjectParameter("UserIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAdvancesPaymentByUsers_Result>("Usp_GetAdvancesPaymentByUsers", advanceStartDateParameter, advanceEndDateParameter, docNumberParameter, typeParameter, userIDsParameter);
        }
    
        public virtual ObjectResult<Usp_GetAdvancesRecieving_Result> Usp_GetAdvancesRecieving(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> advanceTypeId, Nullable<int> docNumber, Nullable<int> recievingMethod)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var advanceTypeIdParameter = advanceTypeId.HasValue ?
                new ObjectParameter("AdvanceTypeId", advanceTypeId) :
                new ObjectParameter("AdvanceTypeId", typeof(int));
    
            var docNumberParameter = docNumber.HasValue ?
                new ObjectParameter("DocNumber", docNumber) :
                new ObjectParameter("DocNumber", typeof(int));
    
            var recievingMethodParameter = recievingMethod.HasValue ?
                new ObjectParameter("RecievingMethod", recievingMethod) :
                new ObjectParameter("RecievingMethod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAdvancesRecieving_Result>("Usp_GetAdvancesRecieving", startDateParameter, endDateParameter, advanceTypeIdParameter, docNumberParameter, recievingMethodParameter);
        }
    
        public virtual ObjectResult<Usp_GetAdvancesRecievingByStudents_Result> Usp_GetAdvancesRecievingByStudents(Nullable<System.DateTime> advanceStartDate, Nullable<System.DateTime> advanceEndDate, Nullable<System.DateTime> returnStartDate, Nullable<System.DateTime> returnEndDate, string studentIDs, string advanceTypeIDs)
        {
            var advanceStartDateParameter = advanceStartDate.HasValue ?
                new ObjectParameter("AdvanceStartDate", advanceStartDate) :
                new ObjectParameter("AdvanceStartDate", typeof(System.DateTime));
    
            var advanceEndDateParameter = advanceEndDate.HasValue ?
                new ObjectParameter("AdvanceEndDate", advanceEndDate) :
                new ObjectParameter("AdvanceEndDate", typeof(System.DateTime));
    
            var returnStartDateParameter = returnStartDate.HasValue ?
                new ObjectParameter("ReturnStartDate", returnStartDate) :
                new ObjectParameter("ReturnStartDate", typeof(System.DateTime));
    
            var returnEndDateParameter = returnEndDate.HasValue ?
                new ObjectParameter("ReturnEndDate", returnEndDate) :
                new ObjectParameter("ReturnEndDate", typeof(System.DateTime));
    
            var studentIDsParameter = studentIDs != null ?
                new ObjectParameter("StudentIDs", studentIDs) :
                new ObjectParameter("StudentIDs", typeof(string));
    
            var advanceTypeIDsParameter = advanceTypeIDs != null ?
                new ObjectParameter("AdvanceTypeIDs", advanceTypeIDs) :
                new ObjectParameter("AdvanceTypeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAdvancesRecievingByStudents_Result>("Usp_GetAdvancesRecievingByStudents", advanceStartDateParameter, advanceEndDateParameter, returnStartDateParameter, returnEndDateParameter, studentIDsParameter, advanceTypeIDsParameter);
        }
    
        public virtual ObjectResult<Usp_GetAllActivities_StudentId_Result> Usp_GetAllActivities_StudentId(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAllActivities_StudentId_Result>("Usp_GetAllActivities_StudentId", studentIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetAllApprovedActivities_StudentId_Result> Usp_GetAllApprovedActivities_StudentId(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAllApprovedActivities_StudentId_Result>("Usp_GetAllApprovedActivities_StudentId", studentIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetAllUsers_ToDecisionTakingForActivities_Result> Usp_GetAllUsers_ToDecisionTakingForActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAllUsers_ToDecisionTakingForActivities_Result>("Usp_GetAllUsers_ToDecisionTakingForActivities");
        }
    
        public virtual ObjectResult<Usp_GetAllUsers_ToDecisionTakingForAdvances_Result> Usp_GetAllUsers_ToDecisionTakingForAdvances()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAllUsers_ToDecisionTakingForAdvances_Result>("Usp_GetAllUsers_ToDecisionTakingForAdvances");
        }
    
        public virtual ObjectResult<Usp_GetAvailableActivityNumbers_Result> Usp_GetAvailableActivityNumbers(Nullable<int> paramConfigId)
        {
            var paramConfigIdParameter = paramConfigId.HasValue ?
                new ObjectParameter("paramConfigId", paramConfigId) :
                new ObjectParameter("paramConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAvailableActivityNumbers_Result>("Usp_GetAvailableActivityNumbers", paramConfigIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetCheckDataReport_Result> Usp_GetCheckDataReport(Nullable<int> payrollID, Nullable<int> userID, string checkNumber, Nullable<System.DateTime> fromExportDate, Nullable<System.DateTime> toExportDate)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var checkNumberParameter = checkNumber != null ?
                new ObjectParameter("CheckNumber", checkNumber) :
                new ObjectParameter("CheckNumber", typeof(string));
    
            var fromExportDateParameter = fromExportDate.HasValue ?
                new ObjectParameter("FromExportDate", fromExportDate) :
                new ObjectParameter("FromExportDate", typeof(System.DateTime));
    
            var toExportDateParameter = toExportDate.HasValue ?
                new ObjectParameter("ToExportDate", toExportDate) :
                new ObjectParameter("ToExportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetCheckDataReport_Result>("Usp_GetCheckDataReport", payrollIDParameter, userIDParameter, checkNumberParameter, fromExportDateParameter, toExportDateParameter);
        }
    
        public virtual ObjectResult<Usp_GetCheckSandEstlamDetails_Result> Usp_GetCheckSandEstlamDetails(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetCheckSandEstlamDetails_Result>("Usp_GetCheckSandEstlamDetails", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetCustomFields_Result> Usp_GetCustomFields(string parentId)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetCustomFields_Result>("Usp_GetCustomFields", parentIdParameter);
        }
    
        public virtual ObjectResult<usp_getDegreesByFACULTYID_Result> usp_getDegreesByFACULTYID(string fACULTY_ID)
        {
            var fACULTY_IDParameter = fACULTY_ID != null ?
                new ObjectParameter("FACULTY_ID", fACULTY_ID) :
                new ObjectParameter("FACULTY_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getDegreesByFACULTYID_Result>("usp_getDegreesByFACULTYID", fACULTY_IDParameter);
        }
    
        public virtual ObjectResult<Usp_GetFacultyWithUserAndPayroll_Result> Usp_GetFacultyWithUserAndPayroll(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetFacultyWithUserAndPayroll_Result>("Usp_GetFacultyWithUserAndPayroll", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetFacultyWithUserAndPayrollForCheck_Result> Usp_GetFacultyWithUserAndPayrollForCheck(Nullable<int> payrollID, Nullable<int> userID, Nullable<int> checkID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var checkIDParameter = checkID.HasValue ?
                new ObjectParameter("CheckID", checkID) :
                new ObjectParameter("CheckID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetFacultyWithUserAndPayrollForCheck_Result>("Usp_GetFacultyWithUserAndPayrollForCheck", payrollIDParameter, userIDParameter, checkIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollChecks_Result> Usp_GetPayRollChecks(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollChecks_Result>("Usp_GetPayRollChecks", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollIntialChecksValues_Result> Usp_GetPayRollIntialChecksValues(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollIntialChecksValues_Result>("Usp_GetPayRollIntialChecksValues", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsExportedChecks_Details_Result> Usp_GetPayRollsExportedChecks_Details(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsExportedChecks_Details_Result>("Usp_GetPayRollsExportedChecks_Details", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsExportedChecksForManyUsers_Details_Result> Usp_GetPayRollsExportedChecksForManyUsers_Details(string payrollID, string userID)
        {
            var payrollIDParameter = payrollID != null ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsExportedChecksForManyUsers_Details_Result>("Usp_GetPayRollsExportedChecksForManyUsers_Details", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoney_Result> Usp_GetPayRollsMoney()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoney_Result>("Usp_GetPayRollsMoney");
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoney_Details_Result> Usp_GetPayRollsMoney_Details(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoney_Details_Result>("Usp_GetPayRollsMoney_Details", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoneyAfterIsBeingMonetary_Details_Result> Usp_GetPayRollsMoneyAfterIsBeingMonetary_Details(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoneyAfterIsBeingMonetary_Details_Result>("Usp_GetPayRollsMoneyAfterIsBeingMonetary_Details", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoneyForIssuingChecks_Result> Usp_GetPayRollsMoneyForIssuingChecks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoneyForIssuingChecks_Result>("Usp_GetPayRollsMoneyForIssuingChecks");
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoneyUsers_Details_Result> Usp_GetPayRollsMoneyUsers_Details(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoneyUsers_Details_Result>("Usp_GetPayRollsMoneyUsers_Details", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMoneyUsersAfterBeingMonteray_Details_Result> Usp_GetPayRollsMoneyUsersAfterBeingMonteray_Details(Nullable<int> payrollID, Nullable<int> userID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMoneyUsersAfterBeingMonteray_Details_Result>("Usp_GetPayRollsMoneyUsersAfterBeingMonteray_Details", payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsMultiUsersChecks_Result> Usp_GetPayRollsMultiUsersChecks(string payrollID)
        {
            var payrollIDParameter = payrollID != null ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsMultiUsersChecks_Result>("Usp_GetPayRollsMultiUsersChecks", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollStatge_Result> Usp_GetPayRollStatge(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollStatge_Result>("Usp_GetPayRollStatge", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsUsersChecks_Result> Usp_GetPayRollsUsersChecks(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsUsersChecks_Result>("Usp_GetPayRollsUsersChecks", payrollIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsWithNotReceivedAfterExportedChecks_Result> Usp_GetPayRollsWithNotReceivedAfterExportedChecks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsWithNotReceivedAfterExportedChecks_Result>("Usp_GetPayRollsWithNotReceivedAfterExportedChecks");
        }
    
        public virtual ObjectResult<USP_GetRewardItemPremiumRelays_Result> USP_GetRewardItemPremiumRelays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetRewardItemPremiumRelays_Result>("USP_GetRewardItemPremiumRelays");
        }
    
        public virtual ObjectResult<Usp_GetStudentAdvertisement_Result> Usp_GetStudentAdvertisement(string studentID)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetStudentAdvertisement_Result>("Usp_GetStudentAdvertisement", studentIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetStudentRwards_Result> Usp_GetStudentRwards(string faculties, string degrees, string studentsComboBox, Nullable<int> payrollID, Nullable<int> userID)
        {
            var facultiesParameter = faculties != null ?
                new ObjectParameter("faculties", faculties) :
                new ObjectParameter("faculties", typeof(string));
    
            var degreesParameter = degrees != null ?
                new ObjectParameter("degrees", degrees) :
                new ObjectParameter("degrees", typeof(string));
    
            var studentsComboBoxParameter = studentsComboBox != null ?
                new ObjectParameter("StudentsComboBox", studentsComboBox) :
                new ObjectParameter("StudentsComboBox", typeof(string));
    
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetStudentRwards_Result>("Usp_GetStudentRwards", facultiesParameter, degreesParameter, studentsComboBoxParameter, payrollIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetTravelOrderDetails_Result> Usp_GetTravelOrderDetails(Nullable<int> travelOrderID)
        {
            var travelOrderIDParameter = travelOrderID.HasValue ?
                new ObjectParameter("TravelOrderID", travelOrderID) :
                new ObjectParameter("TravelOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetTravelOrderDetails_Result>("Usp_GetTravelOrderDetails", travelOrderIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetTravelOrderDetailsWithTicketDetails_Result> Usp_GetTravelOrderDetailsWithTicketDetails(Nullable<int> travelOrderID)
        {
            var travelOrderIDParameter = travelOrderID.HasValue ?
                new ObjectParameter("TravelOrderID", travelOrderID) :
                new ObjectParameter("TravelOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetTravelOrderDetailsWithTicketDetails_Result>("Usp_GetTravelOrderDetailsWithTicketDetails", travelOrderIDParameter);
        }
    
        public virtual ObjectResult<USP_GRAD_STUDENTS_Result> USP_GRAD_STUDENTS(string faculities, string degrees, string departments, string majors, string status, string study, string studntids)
        {
            var faculitiesParameter = faculities != null ?
                new ObjectParameter("faculities", faculities) :
                new ObjectParameter("faculities", typeof(string));
    
            var degreesParameter = degrees != null ?
                new ObjectParameter("degrees", degrees) :
                new ObjectParameter("degrees", typeof(string));
    
            var departmentsParameter = departments != null ?
                new ObjectParameter("departments", departments) :
                new ObjectParameter("departments", typeof(string));
    
            var majorsParameter = majors != null ?
                new ObjectParameter("majors", majors) :
                new ObjectParameter("majors", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var studyParameter = study != null ?
                new ObjectParameter("study", study) :
                new ObjectParameter("study", typeof(string));
    
            var studntidsParameter = studntids != null ?
                new ObjectParameter("studntids", studntids) :
                new ObjectParameter("studntids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GRAD_STUDENTS_Result>("USP_GRAD_STUDENTS", faculitiesParameter, degreesParameter, departmentsParameter, majorsParameter, statusParameter, studyParameter, studntidsParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_is_expected_graduated(Nullable<decimal> student_id)
        {
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("student_id", student_id) :
                new ObjectParameter("student_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_is_expected_graduated", student_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_IsStudentGradted(string studentID)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_IsStudentGradted", studentIDParameter);
        }
    
        public virtual int Usp_RewardsPayrollsPivot(string faculities, string studentIds, string degrees, string status, string levels, string nationalID, Nullable<int> payrollID, Nullable<int> year, Nullable<int> month)
        {
            var faculitiesParameter = faculities != null ?
                new ObjectParameter("Faculities", faculities) :
                new ObjectParameter("Faculities", typeof(string));
    
            var studentIdsParameter = studentIds != null ?
                new ObjectParameter("StudentIds", studentIds) :
                new ObjectParameter("StudentIds", typeof(string));
    
            var degreesParameter = degrees != null ?
                new ObjectParameter("Degrees", degrees) :
                new ObjectParameter("Degrees", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var levelsParameter = levels != null ?
                new ObjectParameter("Levels", levels) :
                new ObjectParameter("Levels", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RewardsPayrollsPivot", faculitiesParameter, studentIdsParameter, degreesParameter, statusParameter, levelsParameter, nationalIDParameter, payrollIDParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Usp_CashAdvances_DataSource_Result> Usp_CashAdvances_DataSource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_CashAdvances_DataSource_Result>("Usp_CashAdvances_DataSource");
        }
    
        public virtual ObjectResult<usp_getStatus_Result> usp_getStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getStatus_Result>("usp_getStatus");
        }
    
        public virtual int usp_delete_payroll(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("payrollID", payrollID) :
                new ObjectParameter("payrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_payroll", payrollIDParameter);
        }
    
        public virtual ObjectResult<string> NextHousingNo_Sp(Nullable<int> student_ID, Nullable<int> operationType_ID)
        {
            var student_IDParameter = student_ID.HasValue ?
                new ObjectParameter("Student_ID", student_ID) :
                new ObjectParameter("Student_ID", typeof(int));
    
            var operationType_IDParameter = operationType_ID.HasValue ?
                new ObjectParameter("OperationType_ID", operationType_ID) :
                new ObjectParameter("OperationType_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NextHousingNo_Sp", student_IDParameter, operationType_IDParameter);
        }
    
        public virtual ObjectResult<Usp_GetPayRollsWithNotReceivedChecks_Result> Usp_GetPayRollsWithNotReceivedChecks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPayRollsWithNotReceivedChecks_Result>("Usp_GetPayRollsWithNotReceivedChecks");
        }
    
        public virtual ObjectResult<string> Usp_GetFacultiesThatNotRegisteredWithMoneyExchangers(Nullable<int> payrollID)
        {
            var payrollIDParameter = payrollID.HasValue ?
                new ObjectParameter("PayrollID", payrollID) :
                new ObjectParameter("PayrollID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usp_GetFacultiesThatNotRegisteredWithMoneyExchangers", payrollIDParameter);
        }
    
        public virtual ObjectResult<GetStudentsByCustomFields_Result> GetStudentsByCustomFields(string customFields, Nullable<decimal> studentID, string nationalID)
        {
            var customFieldsParameter = customFields != null ?
                new ObjectParameter("customFields", customFields) :
                new ObjectParameter("customFields", typeof(string));
    
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(decimal));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsByCustomFields_Result>("GetStudentsByCustomFields", customFieldsParameter, studentIDParameter, nationalIDParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalHistory_Result> usp_GetClinicalHistory(Nullable<long> nationalID)
        {
            var nationalIDParameter = nationalID.HasValue ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalHistory_Result>("usp_GetClinicalHistory", nationalIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetFreeTravelRequestSummery_Result> Usp_GetFreeTravelRequestSummery(Nullable<int> adID, Nullable<int> type)
        {
            var adIDParameter = adID.HasValue ?
                new ObjectParameter("AdID", adID) :
                new ObjectParameter("AdID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetFreeTravelRequestSummery_Result>("Usp_GetFreeTravelRequestSummery", adIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_StatementOfSarfReward_Result> Sp_StatementOfSarfReward(string fACULTY_NO, string dEGREE_CODE, string sTATUS_CODE, string sTUDENT_ID, string lEVEL_CODE, string payrollNumber, Nullable<int> bankCodes)
        {
            var fACULTY_NOParameter = fACULTY_NO != null ?
                new ObjectParameter("FACULTY_NO", fACULTY_NO) :
                new ObjectParameter("FACULTY_NO", typeof(string));
    
            var dEGREE_CODEParameter = dEGREE_CODE != null ?
                new ObjectParameter("DEGREE_CODE", dEGREE_CODE) :
                new ObjectParameter("DEGREE_CODE", typeof(string));
    
            var sTATUS_CODEParameter = sTATUS_CODE != null ?
                new ObjectParameter("STATUS_CODE", sTATUS_CODE) :
                new ObjectParameter("STATUS_CODE", typeof(string));
    
            var sTUDENT_IDParameter = sTUDENT_ID != null ?
                new ObjectParameter("STUDENT_ID", sTUDENT_ID) :
                new ObjectParameter("STUDENT_ID", typeof(string));
    
            var lEVEL_CODEParameter = lEVEL_CODE != null ?
                new ObjectParameter("LEVEL_CODE", lEVEL_CODE) :
                new ObjectParameter("LEVEL_CODE", typeof(string));
    
            var payrollNumberParameter = payrollNumber != null ?
                new ObjectParameter("PayrollNumber", payrollNumber) :
                new ObjectParameter("PayrollNumber", typeof(string));
    
            var bankCodesParameter = bankCodes.HasValue ?
                new ObjectParameter("BankCodes", bankCodes) :
                new ObjectParameter("BankCodes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_StatementOfSarfReward_Result>("Sp_StatementOfSarfReward", fACULTY_NOParameter, dEGREE_CODEParameter, sTATUS_CODEParameter, sTUDENT_IDParameter, lEVEL_CODEParameter, payrollNumberParameter, bankCodesParameter);
        }
    
        public virtual ObjectResult<CheckPassportValidation_Result> CheckPassportValidation(string nationalities, Nullable<int> status, Nullable<int> degree, Nullable<int> level, Nullable<int> restDays, string type)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckPassportValidation_Result>("CheckPassportValidation", nationalitiesParameter, statusParameter, degreeParameter, levelParameter, restDaysParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetResidentsFinalExit_Result> GetResidentsFinalExit(string nationalities, Nullable<int> status, Nullable<int> degree, Nullable<int> level, Nullable<int> restDays, string type)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetResidentsFinalExit_Result>("GetResidentsFinalExit", nationalitiesParameter, statusParameter, degreeParameter, levelParameter, restDaysParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetResidentsRunAway_Result> GetResidentsRunAway(string nationalities, Nullable<bool> inKsa)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var inKsaParameter = inKsa.HasValue ?
                new ObjectParameter("InKsa", inKsa) :
                new ObjectParameter("InKsa", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetResidentsRunAway_Result>("GetResidentsRunAway", nationalitiesParameter, inKsaParameter);
        }
    
        public virtual ObjectResult<GetResidentsValidOrNot_Result> GetResidentsValidOrNot(string nationalities, Nullable<int> status, Nullable<int> degree, Nullable<int> level, Nullable<int> restDays, string type, Nullable<bool> inKsa, string isNew)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var inKsaParameter = inKsa.HasValue ?
                new ObjectParameter("InKsa", inKsa) :
                new ObjectParameter("InKsa", typeof(bool));
    
            var isNewParameter = isNew != null ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetResidentsValidOrNot_Result>("GetResidentsValidOrNot", nationalitiesParameter, statusParameter, degreeParameter, levelParameter, restDaysParameter, typeParameter, inKsaParameter, isNewParameter);
        }
    
        public virtual ObjectResult<CheckResidanceValidation_Result> CheckResidanceValidation(string nationalities, Nullable<int> status, Nullable<int> degree, Nullable<int> level, Nullable<int> restDays, string type)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckResidanceValidation_Result>("CheckResidanceValidation", nationalitiesParameter, statusParameter, degreeParameter, levelParameter, restDaysParameter, typeParameter);
        }
    
        public virtual ObjectResult<CheckResidanceViolations_Result> CheckResidanceViolations(string nationalities, Nullable<int> status, Nullable<int> degree, Nullable<int> level, Nullable<int> restDays, string type)
        {
            var nationalitiesParameter = nationalities != null ?
                new ObjectParameter("Nationalities", nationalities) :
                new ObjectParameter("Nationalities", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var restDaysParameter = restDays.HasValue ?
                new ObjectParameter("RestDays", restDays) :
                new ObjectParameter("RestDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckResidanceViolations_Result>("CheckResidanceViolations", nationalitiesParameter, statusParameter, degreeParameter, levelParameter, restDaysParameter, typeParameter);
        }
    }
}
