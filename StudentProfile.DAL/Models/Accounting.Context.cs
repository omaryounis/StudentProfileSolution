//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentProfile.DAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EsolERPEntities : DbContext
    {
        public EsolERPEntities()
            : base("name=EsolERPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountSecurity> AccountSecurity { get; set; }
        public virtual DbSet<Ast_Location> Ast_Location { get; set; }
        public virtual DbSet<Ast_LocationClass> Ast_LocationClass { get; set; }
        public virtual DbSet<AstNames> AstNames { get; set; }
        public virtual DbSet<BCD> BCD { get; set; }
        public virtual DbSet<CashMovement> CashMovement { get; set; }
        public virtual DbSet<CAT> CAT { get; set; }
        public virtual DbSet<COA> COA { get; set; }
        public virtual DbSet<COM> COM { get; set; }
        public virtual DbSet<Con_Company> Con_Company { get; set; }
        public virtual DbSet<Dafters> Dafters { get; set; }
        public virtual DbSet<DaftersDocuments> DaftersDocuments { get; set; }
        public virtual DbSet<DafterType> DafterType { get; set; }
        public virtual DbSet<FSY> FSY { get; set; }
        public virtual DbSet<GJD> GJD { get; set; }
        public virtual DbSet<GJH> GJH { get; set; }
        public virtual DbSet<JOB> JOB { get; set; }
        public virtual DbSet<Treasuries> Treasuries { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<AssetLocationsWithLevelsSelect_Vw> AssetLocationsWithLevelsSelect_Vw { get; set; }
        public virtual DbSet<CoaTree_Vw> CoaTree_Vw { get; set; }
        public virtual DbSet<VW_UnitParents> VW_UnitParents { get; set; }
    
        public virtual ObjectResult<FilterAssets_Sp_Result> FilterAssets_Sp(Nullable<int> comId, Nullable<int> departmentId, Nullable<int> floorId, Nullable<int> siteId, Nullable<int> catId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("ComId", comId) :
                new ObjectParameter("ComId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterAssets_Sp_Result>("FilterAssets_Sp", comIdParameter, departmentIdParameter, floorIdParameter, siteIdParameter, catIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<FloorDepComForSiteSelect_Sp_Result> FloorDepComForSiteSelect_Sp(Nullable<int> siteId)
        {
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FloorDepComForSiteSelect_Sp_Result>("FloorDepComForSiteSelect_Sp", siteIdParameter);
        }
    
        public virtual ObjectResult<GetComsBasedOnIsFamilial_Sp_Result> GetComsBasedOnIsFamilial_Sp(Nullable<bool> isFamilial)
        {
            var isFamilialParameter = isFamilial.HasValue ?
                new ObjectParameter("IsFamilial", isFamilial) :
                new ObjectParameter("IsFamilial", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComsBasedOnIsFamilial_Sp_Result>("GetComsBasedOnIsFamilial_Sp", isFamilialParameter);
        }
    
        public virtual ObjectResult<GetLocationsTree_Sp_Result> GetLocationsTree_Sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationsTree_Sp_Result>("GetLocationsTree_Sp");
        }
    
        public virtual ObjectResult<Nullable<int>> NextJournalEntryNo_Sp(Nullable<int> cOM_ID, Nullable<int> fsy_ID)
        {
            var cOM_IDParameter = cOM_ID.HasValue ?
                new ObjectParameter("COM_ID", cOM_ID) :
                new ObjectParameter("COM_ID", typeof(int));
    
            var fsy_IDParameter = fsy_ID.HasValue ?
                new ObjectParameter("Fsy_ID", fsy_ID) :
                new ObjectParameter("Fsy_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NextJournalEntryNo_Sp", cOM_IDParameter, fsy_IDParameter);
        }
    
        public virtual ObjectResult<SelectBranchesInAssetLocations_Sp_Result> SelectBranchesInAssetLocations_Sp(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectBranchesInAssetLocations_Sp_Result>("SelectBranchesInAssetLocations_Sp", userIdParameter);
        }
    
        public virtual ObjectResult<SelectBranchesNotInAssetLocations_Sp_Result> SelectBranchesNotInAssetLocations_Sp(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectBranchesNotInAssetLocations_Sp_Result>("SelectBranchesNotInAssetLocations_Sp", userIdParameter);
        }
    
        public virtual int SiteInsert_Sp(Nullable<int> branchId, Nullable<int> floorId, string locationName, Nullable<int> classID, Nullable<int> width, Nullable<int> height, Nullable<int> depth)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var depthParameter = depth.HasValue ?
                new ObjectParameter("Depth", depth) :
                new ObjectParameter("Depth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SiteInsert_Sp", branchIdParameter, floorIdParameter, locationNameParameter, classIDParameter, widthParameter, heightParameter, depthParameter);
        }
    
        public virtual ObjectResult<Usp_Company_Select_ByUserID_Result> Usp_Company_Select_ByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Company_Select_ByUserID_Result>("Usp_Company_Select_ByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<string> usp_GetLastGJHSystemNumber(Nullable<int> fsyID, Nullable<int> optID, string prefix)
        {
            var fsyIDParameter = fsyID.HasValue ?
                new ObjectParameter("FsyID", fsyID) :
                new ObjectParameter("FsyID", typeof(int));
    
            var optIDParameter = optID.HasValue ?
                new ObjectParameter("OptID", optID) :
                new ObjectParameter("OptID", typeof(int));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetLastGJHSystemNumber", fsyIDParameter, optIDParameter, prefixParameter);
        }
    
        public virtual ObjectResult<usp_GetConfigValues_Result> usp_GetConfigValues(string searchKey)
        {
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("SearchKey", searchKey) :
                new ObjectParameter("SearchKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetConfigValues_Result>("usp_GetConfigValues", searchKeyParameter);
        }
    }
}
