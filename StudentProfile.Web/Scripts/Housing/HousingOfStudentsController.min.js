app.controller("HousingOfStudentsCtrl", ["$scope", "HousingOfStudentsSrvc", function (e, t) { let n = new Date; const a = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getFullYear(), o = [{ Id: 1, Text: "Housing" }, { Id: 2, Text: "Transfering" }, { Id: 3, Text: "Replacement" }]; e.InitialVariables = function () { e.TabPopUpWidth = "", e.TabPopUpTitle = "", e.tabDisabled = !1, e.TabPopUpShow = !1, e.PageIsEditing = !0, e.ContentTemplateForTabPopup = "", e.TA_HousingNotes_ReadOnly = !0, e.DB_HousingDateMeladi_ReadOnly = !0, e.btnSaveHousingOfStudentsVisible = !0, e.HousingFurnitureGridInstance = "", e.DataSourceHousingFurnitureGrid = [] }, e.InitialVariables(), e.DataSourceHousingTypes = [{ HousingTypeId: 1, HousingTypeName: "فردي" }, { HousingTypeId: 2, HousingTypeName: "عائلي" }]; var i = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "STUDENT_ID", loadMode: "raw", load: function () { return $.getJSON("/Housing/GetAllStudents", function (e) { }) } }); i.reload(); var d = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !1, key: "STUDENT_ID", loadMode: "raw", load: function () { return $.getJSON("/Housing/GetAllHousingStudents", function (e) { }) } }), s = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "ComId", loadMode: "raw", load: function () { return "" !== e.MDL_HousingTypeId && null !== e.MDL_HousingTypeId && void 0 !== e.MDL_HousingTypeId ? $.getJSON("/Housing/GetALLComsBasedOnIsFamilialFlag", { IsFamilial: 1 !== e.MDL_HousingTypeId }, function (e) { }) : (e.MDL_ComId = "", []) } }), u = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "ComId", loadMode: "raw", load: function () { return "" !== e.MDL_HousingTypeId_Instance && null !== e.MDL_HousingTypeId_Instance && void 0 !== e.MDL_HousingTypeId_Instance ? $.getJSON("/Housing/GetALLComsBasedOnIsFamilialFlag", { IsFamilial: 1 !== e.MDL_HousingTypeId_Instance }, function (e) { }) : (e.MDL_ComId_Instance = "", []) } }), l = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "UnitId", loadMode: "raw", load: function () { return "" !== e.MDL_ComId && null !== e.MDL_ComId && "" !== e.MDL_HousingTypeId && null !== e.MDL_HousingTypeId ? $.getJSON("/Housing/GetALLUnitsBasedOnCom", { IsFamilial: 1 !== e.MDL_HousingTypeId, ComId: e.MDL_ComId }, function (e) { }) : (e.MDL_UnitId = "", []) } }), r = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "UnitId", loadMode: "raw", load: function () { return "" !== e.MDL_ComId_Instance && null !== e.MDL_ComId_Instance && "" !== e.MDL_HousingTypeId_Instance && null !== e.MDL_HousingTypeId_Instance ? $.getJSON("/Housing/GetALLUnitsBasedOnCom", { IsFamilial: 1 !== e.MDL_HousingTypeId_Instance, ComId: e.MDL_ComId_Instance }, function (e) { }) : (e.MDL_UnitId_Instance = "", []) } }), D = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "FloorId", loadMode: "raw", load: function () { return "" !== e.MDL_UnitId && null !== e.MDL_UnitId && "" !== e.MDL_ComId && null !== e.MDL_ComId && "" !== e.MDL_HousingTypeId && null !== e.MDL_HousingTypeId ? $.getJSON("/Housing/GetALLFloorsBasedOnUnit", { IsFamilial: 1 !== e.MDL_HousingTypeId, ComId: e.MDL_ComId, UnitId: e.MDL_UnitId }, function (e) { }) : (e.MDL_FloorId = "", []) } }), _ = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "FloorId", loadMode: "raw", load: function () { return "" !== e.MDL_UnitId_Instance && null !== e.MDL_UnitId_Instance && "" !== e.MDL_ComId_Instance && null !== e.MDL_ComId_Instance && "" !== e.MDL_HousingTypeId_Instance && null !== e.MDL_HousingTypeId_Instance ? $.getJSON("/Housing/GetALLFloorsBasedOnUnit", { IsFamilial: 1 !== e.MDL_HousingTypeId_Instance, ComId: e.MDL_ComId_Instance, UnitId: e.MDL_UnitId_Instance }, function (e) { }) : (e.MDL_FloorId_Instance = "", []) } }), c = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "RoomId", loadMode: "raw", load: function () { return "" !== e.MDL_FloorId && null !== e.MDL_FloorId && "" !== e.MDL_UnitId && null !== e.MDL_UnitId && "" !== e.MDL_ComId && null !== e.MDL_ComId && "" !== e.MDL_HousingTypeId && null !== e.MDL_HousingTypeId ? $.getJSON("/Housing/GetALLRoomsBasedOnFloor", { IsFamilial: 1 !== e.MDL_HousingTypeId, ComId: e.MDL_ComId, UnitId: e.MDL_UnitId, FloorId: e.MDL_FloorId }, function (e) { }) : (e.MDL_RoomId = "", []) } }), L = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "RoomId", loadMode: "raw", load: function () { return "" !== e.MDL_FloorId_Instance && null !== e.MDL_FloorId_Instance && "" !== e.MDL_UnitId_Instance && null !== e.MDL_UnitId_Instance && "" !== e.MDL_ComId_Instance && null !== e.MDL_ComId_Instance && "" !== e.MDL_HousingTypeId_Instance && null !== e.MDL_HousingTypeId_Instance ? $.getJSON("/Housing/GetALLRoomsBasedOnFloor", { IsFamilial: 1 !== e.MDL_HousingTypeId_Instance, ComId: e.MDL_ComId_Instance, UnitId: e.MDL_UnitId_Instance, FloorId: e.MDL_FloorId_Instance }, function (e) { }) : (e.MDL_RoomId_Instance = "", []) } }), I = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !1, key: "BedLocationId", loadMode: "raw", load: function () { return !0 === e.PageIsEditing ? "" !== e.MDL_BedLocationId && null !== e.MDL_BedLocationId ? [{ BedLocationId: e.MDL_BedLocationId, BedLocationCode: "Location " + e.MDL_BedLocationCode }] : [] : "" !== e.MDL_RoomId && null !== e.MDL_RoomId ? $.getJSON("/Housing/GetALLBedsBasedOnRoomId", { RoomId: e.MDL_RoomId }, function (e) { }) : (e.MDL_BedLocationId = "", []) } }), g = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !1, key: "BedLocationId", loadMode: "raw", load: function () { return !0 === e.PageIsEditing ? "" !== e.MDL_BedLocationId_Instance && null !== e.MDL_BedLocationId_Instance ? [{ BedLocationId: e.MDL_BedLocationId_Instance, BedLocationCode: "Location " + e.MDL_BedLocationCode_Instance }] : [] : "" !== e.MDL_RoomId_Instance && null !== e.MDL_RoomId_Instance ? $.getJSON("/Housing/GetALLBedsBasedOnRoomId", { RoomId: e.MDL_RoomId_Instance }, function (e) { }) : (e.MDL_BedLocationId_Instance = "", []) } }), p = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "CategoryId", loadMode: "raw", load: function () { return $.getJSON("/Housing/GetALLCategories", function (e) { }) } }), M = new DevExpress.data.DataSource({ paginate: !0, cacheRawData: !0, key: "FurnitureId", loadMode: "raw", load: function () { return "" !== e.MDL_CategoryId && null !== e.MDL_CategoryId ? $.getJSON("/Housing/GetALLFurnituresBasedOnCategoryId", { CategoryId: e.MDL_CategoryId }, function (e) { }) : (e.MDL_FurnitureId = "", []) } }); e.DL_Students = { dataSource: i, bindingOptions: { value: "MDL_StudentId", readOnly: "DL_Students_ReadOnly" }, placeholder: "بحث ...", noDataText: "لا يوجد بيانات", displayExpr: "STUDENT_NAME", valueExpr: "STUDENT_ID", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (n) { e.ClearHomePage_Fn(), e.PageIsEditing = !0, e.TA_HousingNotes_ReadOnly = !0, e.DB_HousingDateMeladi_ReadOnly = !0, null !== n.value && "" !== n.value && void 0 !== n.value && (t.GetStudentDataByID(n.value).then(function (t) { e.MDL_LevelName = t.data.LevelName, e.MDL_DegreeName = t.data.DegreeName, e.MDL_GenderName = t.data.GenderName, e.MDL_StatusName = t.data.StatusName, e.MDL_FacultiyName = t.data.FacultiyName, e.MDL_MobileNumber = t.data.MobileNumber, e.MDL_BirthCityName = t.data.BirthCityName, e.MDL_StudyTypeName = t.data.StudyTypeName, e.MDL_NationalityName = t.data.NationalityName, e.MDL_BirthDate = e.Date_Format_Fn(t.data.BirthDate) }), t.GetHousingStudent(e.MDL_StudentId).then(function (t) { "" !== t.data && null !== t.data && void 0 !== t.data && null !== t.data.BedLocationId && void 0 !== t.data.BedLocationId && "" !== t.data.BedLocationId && (e.MDL_BedLocationId = t.data.BedLocationId, e.MDL_BedLocationCode = t.data.BedLocationCode, e.MDL_HousingNotes = t.data.NotesOfHosing, e.MDL_RoomId = t.data.LocationDetails.SiteId, e.MDL_FloorId = t.data.LocationDetails.FloorId, e.MDL_ComId = t.data.LocationDetails.CompanyId, e.MDL_UnitId = t.data.LocationDetails.DepartmentId, e.MDL_HousingDate = e.Date_Format_Fn(t.data.HousingDate), e.MDL_HousingTypeId = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2) }), t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data })) } }, e.DL_Students_Instance = { dataSource: d, bindingOptions: { value: "MDL_StudentId_Instance", readOnly: "DL_Students_Instance_ReadOnly" }, placeholder: "بحث ...", noDataText: "لا يوجد بيانات", displayExpr: "STUDENT_NAME", valueExpr: "STUDENT_ID", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (n) { null !== n.value && "" !== n.value && void 0 !== n.value ? (e.PageIsEditing = !0, t.GetStudentDataByID(e.MDL_StudentId_Instance).then(function (t) { e.MDL_LevelName_Instance = t.data.LevelName, e.MDL_DegreeName_Instance = t.data.DegreeName, e.MDL_GenderName_Instance = t.data.GenderName, e.MDL_StatusName_Instance = t.data.StatusName, e.MDL_FacultiyName_Instance = t.data.FacultiyName, e.MDL_MobileNumber_Instance = t.data.MobileNumber, e.MDL_StudyTypeName_Instance = t.data.StudyTypeName, e.MDL_BirthCityName_Instance = t.data.BirthCityName, e.MDL_NationalityName_Instance = t.data.NationalityName, e.MDL_BirthDate_Instance = e.Date_Format_Fn(t.data.BirthDate) }), t.GetHousingStudent(e.MDL_StudentId_Instance).then(function (t) { "" !== t.data && null !== t.data && (e.MDL_BedLocationId_Instance = t.data.BedLocationId, e.MDL_BedLocationCode_Instance = t.data.BedLocationCode, e.MDL_HousingNotes_Instance = t.data.NotesOfHosing, e.MDL_RoomId_Instance = t.data.LocationDetails.SiteId, e.MDL_FloorId_Instance = t.data.LocationDetails.FloorId, e.MDL_ComId_Instance = t.data.LocationDetails.CompanyId, e.MDL_UnitId_Instance = t.data.LocationDetails.DepartmentId, e.MDL_HousingDate_Instance = e.Date_Format_Fn(t.data.HousingDate), e.MDL_HousingTypeId_Instance = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2) }), t.GetNextHousingNo(n.value, 0).then(function (t) { e.MDL_HousingNumberAuto_Instance = t.data })) : (e.MDL_LevelName_Instance = "", e.MDL_BirthDate_Instance = "", e.MDL_DegreeName_Instance = "", e.MDL_GenderName_Instance = "", e.MDL_StatusName_Instance = "", e.MDL_FacultiyName_Instance = "", e.MDL_MobileNumber_Instance = "", e.MDL_BirthCityName_Instance = "", e.MDL_StudyTypeName_Instance = "", e.MDL_NationalityName_Instance = "", e.MDL_ComId_Instance = "", e.MDL_UnitId_Instance = "", e.MDL_RoomId_Instance = "", e.MDL_FloorId_Instance = "", e.MDL_HousingDate_Instance = "", e.MDL_HousingNotes_Instance = "", e.MDL_HousingTypeId_Instance = "", e.MDL_HousingNumberAuto_Instance = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationCode_Instance = "") } }, e.TB_Facultiy = { bindingOptions: { value: "MDL_FacultiyName" }, placeholder: "اسم الكلية أو المعهد", rtlEnabled: !0, readOnly: !0 }, e.TB_Facultiy_Instance = { bindingOptions: { value: "MDL_FacultiyName_Instance" }, placeholder: "اسم الكلية أو المعهد", rtlEnabled: !0, readOnly: !0 }, e.TB_Nationality = { bindingOptions: { value: "MDL_NationalityName" }, placeholder: "الجنسية", rtlEnabled: !0, readOnly: !0 }, e.TB_Nationality_Instance = { bindingOptions: { value: "MDL_NationalityName_Instance" }, placeholder: "الجنسية", rtlEnabled: !0, readOnly: !0 }, e.TB_MobileNumber = { bindingOptions: { value: "MDL_MobileNumber" }, placeholder: "رقم الجوال", rtlEnabled: !0, readOnly: !0 }, e.TB_MobileNumber_Instance = { bindingOptions: { value: "MDL_MobileNumber_Instance" }, placeholder: "رقم الجوال", rtlEnabled: !0, readOnly: !0 }, e.TB_BirthCity = { bindingOptions: { value: "MDL_BirthCityName" }, placeholder: "محل الميلاد", rtlEnabled: !0, readOnly: !0 }, e.TB_BirthCity_Instance = { bindingOptions: { value: "MDL_BirthCityName_Instance" }, placeholder: "محل الميلاد", rtlEnabled: !0, readOnly: !0 }, e.TB_LevelName = { bindingOptions: { value: "MDL_LevelName" }, placeholder: "المستوي", rtlEnabled: !0, readOnly: !0 }, e.TB_LevelName_Instance = { bindingOptions: { value: "MDL_LevelName_Instance" }, placeholder: "المستوي", rtlEnabled: !0, readOnly: !0 }, e.TB_StatusName = { bindingOptions: { value: "MDL_StatusName" }, placeholder: "الحالة الأكاديمية", rtlEnabled: !0, readOnly: !0 }, e.TB_StatusName_Instance = { bindingOptions: { value: "MDL_StatusName_Instance" }, placeholder: "الحالة الأكاديمية", rtlEnabled: !0, readOnly: !0 }, e.TB_DegreeName = { bindingOptions: { value: "MDL_DegreeName" }, placeholder: "الدرجة العلمية", rtlEnabled: !0, readOnly: !0 }, e.TB_DegreeName_Instance = { bindingOptions: { value: "MDL_DegreeName_Instance" }, placeholder: "الدرجة العلمية", rtlEnabled: !0, readOnly: !0 }, e.TB_StudyTypeName = { bindingOptions: { value: "MDL_StudyTypeName" }, placeholder: "نوع الدراسة", rtlEnabled: !0, readOnly: !0 }, e.TB_StudyTypeName_Instance = { bindingOptions: { value: "MDL_StudyTypeName_Instance" }, placeholder: "نوع الدراسة", rtlEnabled: !0, readOnly: !0 }, e.TB_GenderName = { bindingOptions: { value: "MDL_GenderName" }, placeholder: "النوع", rtlEnabled: !0, readOnly: !0 }, e.TB_GenderName_Instance = { bindingOptions: { value: "MDL_GenderName_Instance" }, placeholder: "النوع", rtlEnabled: !0, readOnly: !0 }, e.DB_BirthDate = { bindingOptions: { value: "MDL_BirthDate" }, type: "date", disabled: !0, displayFormat: "dd/MM/yyyy" }, e.DB_BirthDate_Instance = { bindingOptions: { value: "MDL_BirthDate_Instance" }, disabled: !0, type: "date", displayFormat: "dd/MM/yyyy" }, e.DB_HousingDateMeladi = { bindingOptions: { value: "MDL_HousingDate", readOnly: "DB_HousingDateMeladi_ReadOnly" }, type: "date", displayFormat: "dd/MM/yyyy", onValueChanged: function (n) { Number.isNaN(new Date(e.MDL_HousingDate).getTime()) ? e.MDL_hijriDate = "" : t.ToHijriDate(e.MDL_HousingDate).then(function (t) { e.MDL_hijriDate = t.data }) } }, e.DB_HousingDateMeladi_Instance = { bindingOptions: { value: "MDL_HousingDate_Instance", readOnly: "DB_HousingDateMeladi_readOnly_Instance" }, type: "date", displayFormat: "dd/MM/yyyy", onValueChanged: function (n) { Number.isNaN(new Date(e.MDL_HousingDate_Instance).getTime()) ? e.MDL_hijriDate_Instance = "" : t.ToHijriDate(e.MDL_HousingDate_Instance).then(function (t) { e.MDL_hijriDate_Instance = t.data }) } }, e.TB_HousingDateHigri = { bindingOptions: { value: "MDL_hijriDate" }, placeholder: "التاريخ الهجري", rtlEnabled: !0, readOnly: !0, onInitialized: function () { } }, e.TB_HousingDateHigri_Instance = { bindingOptions: { value: "MDL_hijriDate_Instance" }, placeholder: "التاريخ الهجري", rtlEnabled: !0, readOnly: !0, onInitialized: function () { } }, e.DB_ReplacementDateMeladi = { bindingOptions: { value: "MDL_ReplacementDateMeladi" }, type: "date", displayFormat: "dd/MM/yyyy", onValueChanged: function (n) { Number.isNaN(new Date(e.MDL_ReplacementDateMeladi).getTime()) ? e.MDL_ReplacementDateHigri = "" : t.ToHijriDate(e.MDL_ReplacementDateMeladi).then(function (t) { e.MDL_ReplacementDateHigri = t.data }) } }, e.TB_ReplacementDateHigri = { bindingOptions: { value: "MDL_ReplacementDateHigri" }, placeholder: "التاريخ الهجري", rtlEnabled: !0, readOnly: !0, onInitialized: function () { } }, e.TB_HousingNumberAuto = { bindingOptions: { value: "MDL_HousingNumberAuto" }, placeholder: "الحركة", rtlEnabled: !0, readOnly: !0, onInitialized: function () { } }, e.TB_HousingNumberAuto_Instance = { bindingOptions: { value: "MDL_HousingNumberAuto_Instance" }, placeholder: "الحركة", rtlEnabled: !0, readOnly: !0, onInitialized: function () { } }, e.TB_ReplacementNumberAuto = { bindingOptions: { value: "MDL_ReplacementNumberAuto" }, placeholder: "الحركة", rtlEnabled: !0, readOnly: !0, onInitialized: function () { t.GetNextHousingNo(0, e.FoundId_Fn("Replacement")).then(function (t) { e.MDL_ReplacementNumberAuto = t.data }) } }, e.TA_HousingNotes = { height: 80, bindingOptions: { value: "MDL_HousingNotes", readOnly: "TA_HousingNotes_ReadOnly" } }, e.TA_HousingNotes_Instance = { height: 80, bindingOptions: { value: "MDL_HousingNotes_Instance", readOnly: "TA_HousingNotes_ReadOnly_Instance" } }, e.TA_ReplacementNotes_FirstSt = { height: 120, bindingOptions: { value: "MDL_ReplacementNotes_FirstSt" } }, e.TA_ReplacementNotes_SecondSt = { height: 120, bindingOptions: { value: "MDL_ReplacementNotes_SecondSt" } }, e.DL_HousingTypes = { bindingOptions: { value: "MDL_HousingTypeId", text: "HousingTypeName", items: "DataSourceHousingTypes", disabled: "DL_HousingTypesDisabled" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "HousingTypeName", valueExpr: "HousingTypeId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? s.reload() : (e.MDL_ComId = "", s.reload()) } }, e.DL_HousingTypes_Instance = { bindingOptions: { value: "MDL_HousingTypeId_Instance", text: "HousingTypeName", items: "DataSourceHousingTypes", disabled: "DL_HousingTypesDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "HousingTypeName", valueExpr: "HousingTypeId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? ("StudentHousingTransferContent" === e.ContentTemplateForTabPopup && (e.PageIsEditing = !1), u.reload()) : (e.MDL_ComId_Instance = "", u.reload()) } }, e.DL_Categories = { dataSource: p, bindingOptions: { value: "MDL_CategoryId", text: "MDL_CategoryText" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "CategoryName", valueExpr: "CategoryId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { e.MDL_FurnitureId = "", e.MDL_FurnitureText = "", M.reload() } }, e.DL_Furnitures = { dataSource: M, bindingOptions: { value: "MDL_FurnitureId" }, placeholder: "اختر", noDataText: "لا يوجد أثاث متاح حاليا", displayExpr: "FurnitureName", valueExpr: "FurnitureId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (e) { } }, e.DL_Beds = { dataSource: I, bindingOptions: { value: "MDL_BedLocationId", disabled: "DL_BedsDisabled" }, placeholder: "اختر", noDataText: "لا يوجد أسِرَّة متاحة", displayExpr: "BedLocationCode", valueExpr: "BedLocationId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (e) { } }, e.DL_Beds_Instance = { dataSource: g, bindingOptions: { value: "MDL_BedLocationId_Instance", disabled: "DL_BedsDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد أسِرَّة متاحة", displayExpr: "BedLocationCode", valueExpr: "BedLocationId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (e) { } }, e.DL_Coms = { dataSource: s, bindingOptions: { value: "MDL_ComId", disabled: "DL_ComsDisabled" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "ComName", valueExpr: "ComId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? l.reload() : (e.MDL_UnitId = "", l.reload()) } }, e.DL_Coms_Instance = { dataSource: u, bindingOptions: { value: "MDL_ComId_Instance", disabled: "DL_ComsDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "ComName", valueExpr: "ComId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? r.reload() : (r.reload(), e.MDL_UnitId_Instance = "") } }, e.DL_Units = { dataSource: l, bindingOptions: { value: "MDL_UnitId", disabled: "DL_UnitsDisabled" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "UnitName", valueExpr: "UnitId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? D.reload() : (e.MDL_FloorId = "", D.reload()) } }, e.DL_Units_Instance = { dataSource: r, bindingOptions: { value: "MDL_UnitId_Instance", disabled: "DL_UnitsDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "UnitName", valueExpr: "UnitId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? _.reload() : (e.MDL_FloorId_Instance = "", _.reload()) } }, e.DL_Floors = { dataSource: D, bindingOptions: { value: "MDL_FloorId", disabled: "DL_FloorsDisabled" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "FloorName", valueExpr: "FloorId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? c.reload() : (e.MDL_RoomId = "", c.reload()) } }, e.DL_Floors_Instance = { dataSource: _, bindingOptions: { value: "MDL_FloorId_Instance", disabled: "DL_FloorsDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "FloorName", valueExpr: "FloorId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? L.reload() : (e.MDL_RoomId_Instance = "", L.reload()) } }, e.DL_Rooms = { dataSource: c, bindingOptions: { value: "MDL_RoomId", disabled: "DL_RoomsDisabled" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "RoomName", valueExpr: "RoomId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? I.reload() : (e.MDL_BedLocationId = "", I.reload()) } }, e.DL_Rooms_Instance = { dataSource: L, bindingOptions: { value: "MDL_RoomId_Instance", disabled: "DL_RoomsDisabled_Instance" }, placeholder: "اختر", noDataText: "لا يوجد بيانات", displayExpr: "RoomName", valueExpr: "RoomId", showBorders: !0, searchEnabled: !0, showClearButton: !0, rtlEnabled: !0, onValueChanged: function (t) { !0 === e.PageIsEditing ? g.reload() : (e.MDL_BedLocationId_Instance = "", g.reload()) } }, e.listOptions = { dataSource: [{ key: "StudentHousing", text: "تسكين الطالب" }, { key: "FurnitureDeliveryTo", text: "تسليم العهد إلي الطالب" }, { key: "FurnitureDeliveryFrom", text: "استلام العهد من الطالب" }, { key: "StudentTransfering", text: "نقل الطالب" }, { key: "StudentReplacement", text: "تبديل السكن مع طالب اخر" }], itemTemplate: function (e) { return $("<div> <i class='fa fa-long-arrow-left'> </i>" + e.text + "</div>") }, onItemClick: function (n) { isNaN(parseFloat(e.MDL_StudentId)) ? swal("تنبيه", "برجاء إختيار الطالب أولا", "warning") : "StudentHousing" === n.itemData.key ? (e.ClearHomePage_Fn(), e.TabPopUpShow = !0, e.TabPopUpWidth = 1300, e.TabPopUpTitle = "تهيئة تسكين الطالب", e.btnSaveHousingOfStudentsText = "تسكين", e.ContentTemplateForTabPopup = "StudentHousingContent", e.TabsPopupInstance.repaint(), t.GetHousingStudent(e.MDL_StudentId).then(function (n) { "" !== n.data && null !== n.data && void 0 !== n.data ? null !== n.data.BedLocationId && "" !== n.data.BedLocationId && void 0 !== n.data.BedLocationId && (t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data }), e.PageIsEditing = !0, e.TA_HousingNotes_ReadOnly = !0, e.Fn_DisabledLocationsDetails(!0), e.DB_HousingDateMeladi_ReadOnly = !0, e.btnSaveHousingOfStudentsVisible = !1, e.MDL_HousingNotes = n.data.NotesOfHosing, e.MDL_BedLocationId = n.data.BedLocationId, e.MDL_BedLocationCode = n.data.BedLocationCode, e.MDL_RoomId = n.data.LocationDetails.SiteId, e.MDL_HousingDate = String(n.data.HousingDate), e.MDL_FloorId = n.data.LocationDetails.FloorId, e.MDL_ComId = n.data.LocationDetails.CompanyId, e.MDL_UnitId = n.data.LocationDetails.DepartmentId, e.MDL_HousingTypeId = !1 === n.data.LocationDetails.IsFamilial ? 1 : 2) : (e.MDL_HousingDate = a, e.Fn_DisabledLocationsDetails(!1), t.GetNextHousingNo(0, e.FoundId_Fn("Housing")).then(function (t) { e.MDL_HousingNumberAuto = t.data })) })) : "FurnitureDeliveryTo" === n.itemData.key ? t.GetStudentHousingFurniture(e.MDL_StudentId).then(function (t) { if (null !== t.data.BedLocationId && void 0 !== t.data.BedLocationId && "" !== t.data.BedLocationId) { if (e.ClearHomePage_Fn(), e.PageIsEditing = !0, e.TabPopUpShow = !0, e.TabPopUpWidth = 1250, e.TabPopUpTitle = "تسليم العهد إلي الطالب", e.btnSaveHousingOfStudentsText = "تسليم العهد", e.ContentTemplateForTabPopup = "HousingDeliveryToStudentContent", e.TabsPopupInstance.repaint(), e.Fn_DisabledLocationsDetails(!0), p.reload(), e.MDL_BedLocationId = t.data.BedLocationId, e.MDL_BedLocationCode = t.data.BedLocationCode, e.MDL_RoomId = t.data.LocationDetails.SiteId, e.MDL_FloorId = t.data.LocationDetails.FloorId, e.MDL_ComId = t.data.LocationDetails.CompanyId, e.MDL_UnitId = t.data.LocationDetails.DepartmentId, e.MDL_HousingTypeId = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2, t.data.StudentFurnitures.length > 0) for (var n = 0; n < t.data.StudentFurnitures.length; n++)e.DataSourceHousingFurnitureGrid.push(t.data.StudentFurnitures[n]) } else swal("تنبيه", "عفوا هذا الطالب لم يتم تسكينه حتي الآن برجاء تسكين الطالب أولا", "warning") }) : "FurnitureDeliveryFrom" === n.itemData.key ? t.GetStudentHousingFurniture(e.MDL_StudentId).then(function (t) { if (null !== t.data.BedLocationId && "" !== t.data.BedLocationId && void 0 !== t.data.BedLocationId) if (void 0 !== t.data.StudentFurnitures.length && t.data.StudentFurnitures.length > 0) { e.ClearHomePage_Fn(), e.PageIsEditing = !0, e.TabPopUpShow = !0, e.TabPopUpWidth = 1250, e.TabPopUpTitle = "استلام العهد من الطالب", e.ContentTemplateForTabPopup = "HousingDeliveryFromStudentContent", e.TabsPopupInstance.repaint(), e.Fn_DisabledLocationsDetails(!0), e.MDL_BedLocationId = t.data.BedLocationId, e.MDL_BedLocationCode = t.data.BedLocationCode, e.MDL_RoomId = t.data.LocationDetails.SiteId, e.MDL_FloorId = t.data.LocationDetails.FloorId, e.MDL_ComId = t.data.LocationDetails.CompanyId, e.MDL_UnitId = t.data.LocationDetails.DepartmentId, e.MDL_HousingTypeId = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2; for (var n = 0; n < t.data.StudentFurnitures.length; n++)e.DataSourceHousingFurnitureGrid.push(t.data.StudentFurnitures[n]) } else swal("تنبيه", "عفوا هذا الطالب لم يتم تسليمه أي عهد حتي الآن برجاء إسناد العهد للطالب أولا", "warning"); else swal("تنبيه", "عفوا هذا الطالب لم يتم تسكينه حتي الآن برجاء تسكين الطالب أولا", "warning") }) : "StudentTransfering" === n.itemData.key ? t.GetHousingStudent(e.MDL_StudentId).then(function (n) { null !== n.data.BedLocationId && "" !== n.data.BedLocationId && void 0 !== n.data.BedLocationId ? (e.ClearHomePage_Fn(), e.TA_HousingNotes_ReadOnly = !0, e.Fn_DisabledLocationsDetails(!0), e.DB_HousingDateMeladi_ReadOnly = !0, e.PageIsEditing = !0, e.TabPopUpShow = !0, e.TabPopUpWidth = 1320, e.btnSaveHousingOfStudentsText = "نقل", e.btnSaveHousingOfStudentsVisible = !0, e.TabPopUpTitle = "نقل الطالب من سكن لآخر", e.ContentTemplateForTabPopup = "StudentHousingTransferContent", e.TabsPopupInstance.repaint(), e.MDL_BedLocationId = n.data.BedLocationId, e.MDL_BedLocationCode = n.data.BedLocationCode, e.MDL_HousingNotes = n.data.NotesOfHosing, e.MDL_RoomId = n.data.LocationDetails.SiteId, e.MDL_FloorId = n.data.LocationDetails.FloorId, e.MDL_ComId = n.data.LocationDetails.CompanyId, e.MDL_UnitId = n.data.LocationDetails.DepartmentId, e.MDL_HousingDate = e.Date_Format_Fn(n.data.HousingDate), e.MDL_HousingTypeId = !1 === n.data.LocationDetails.IsFamilial ? 1 : 2, t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data }), t.GetNextHousingNo(0, e.FoundId_Fn("Transfering")).then(function (t) { e.MDL_HousingNumberAuto_Instance = t.data })) : swal("تنبيه", "عفوا هذا الطالب لم يتم تسكينه حتي الآن برجاء تسكين الطالب أولا", "warning") }) : "StudentReplacement" === n.itemData.key && t.GetHousingStudent(e.MDL_StudentId).then(function (n) { null !== n.data.BedLocationId && "" !== n.data.BedLocationId && void 0 !== n.data.BedLocationId ? (e.ClearHomePage_Fn(), e.PageIsEditing = !0, e.TabPopUpShow = !0, e.TabPopUpWidth = 1330, e.TabPopUpTitle = "تبديل السكن مع طالب اخر", e.btnShowPopUpReplacementNotes_Text = "حفظ", e.ContentTemplateForTabPopup = "StudentHousingReplacementContent", e.TabsPopupInstance.repaint(), e.MDL_BedLocationId = n.data.BedLocationId, e.MDL_BedLocationCode = n.data.BedLocationCode, e.MDL_HousingNotes = n.data.NotesOfHosing, e.MDL_RoomId = n.data.LocationDetails.SiteId, e.MDL_FloorId = n.data.LocationDetails.FloorId, e.MDL_ComId = n.data.LocationDetails.CompanyId, e.MDL_UnitId = n.data.LocationDetails.DepartmentId, e.MDL_HousingDate = e.Date_Format_Fn(n.data.HousingDate), e.MDL_HousingTypeId = !1 === n.data.LocationDetails.IsFamilial ? 1 : 2, t.GetStudentDataByID(e.MDL_StudentId).then(function (t) { e.MDL_FacultiyName = t.data.FacultiyName, e.MDL_NationalityName = t.data.NationalityName, e.MDL_MobileNumber = t.data.MobileNumber, e.MDL_BirthCityName = t.data.BirthCityName, e.MDL_LevelName = t.data.LevelName, e.MDL_StatusName = t.data.StatusName, e.MDL_BirthDate = e.Date_Format_Fn(t.data.BirthDate), e.MDL_StudyTypeName = t.data.StudyTypeName, e.MDL_DegreeName = t.data.DegreeName, e.MDL_GenderName = t.data.GenderName }), t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data }), e.DL_Students_ReadOnly = !0, e.TA_HousingNotes_ReadOnly = !0, e.Fn_DisabledLocationsDetails(!0), e.DB_HousingDateMeladi_ReadOnly = !0, e.TA_HousingNotes_ReadOnly_Instance = !0, e.Fn_DisabledLocationsDetails_Instance(!0), e.DB_HousingDateMeladi_readOnly_Instance = !0) : swal("تنبيه", "عفوا هذا الطالب لم يتم تسكينه حتي الآن برجاء تسكين الطالب أولا", "warning") }) } }, e.AddUpdateHousingFurniture = function () { null === e.MDL_FurnitureId || "" === e.MDL_FurnitureId || e.MDL_FurnitureId < 0 ? DevExpress.ui.notify({ message: "عفوا ادخل اسم قطعة الأثاث", type: "error", displayTime: 1e4, closeOnClick: !0 }) : null === e.MDL_CategoryId || "" === e.MDL_CategoryId || e.MDL_CategoryId < 0 ? DevExpress.ui.notify({ message: "عفوا ادخل اسم التصنيف", type: "error", displayTime: 1e4, closeOnClick: !0 }) : (e.DataSourceHousingFurnitureGrid.length < 1 && (e.DataSourceHousingFurnitureGrid = []), e.DataSourceHousingFurnitureGrid.filter(function (t) { return t.CategoryId === e.MDL_CategoryId && t.FurnitureId === e.MDL_FurnitureId }).length > 0 ? DevExpress.ui.notify({ message: "عفوا لايمكن  تكرار  إدخال  نفس   قطعة الأثاث  على  نفس  التصنيف", type: "error", displayTime: 1e4, closeOnClick: !0 }) : (e.DataSourceHousingFurnitureGrid.push({ HousingFurnituresOfStudent_Id: 0, CategoryId: e.MDL_CategoryId, CategoryName: e.MDL_CategoryText, FurnitureId: e.MDL_FurnitureId, FurnitureName: e.MDL_FurnitureText, LocationId: e.MDL_RoomId }), e.clearFields())) }, e.clearFields = function () { e.MDL_CategoryId = "", e.MDL_FurnitureId = "" }, e.HousingFurnitureGrid = { bindingOptions: { rtlEnabled: !0, dataSource: "DataSourceHousingFurnitureGrid" }, sorting: { mode: "multiple" }, wordWrapEnabled: !1, showBorders: !1, searchPanel: { visible: !1, placeholder: "بحث", width: 300 }, paging: { pageSize: 5 }, pager: { allowedPageSizes: "auto", infoText: "(صفحة  {0} من {1} ({2} عنصر", showInfo: !0, showNavigationButtons: !0, showPageSizeSelector: !0, visible: "auto" }, filterRow: { visible: !1, operationDescriptions: { between: "بين", contains: "تحتوى على", endsWith: "تنتهي بـ", equal: "يساوى", greaterThan: "اكبر من", greaterThanOrEqual: "اكبر من او يساوى", lessThan: "اصغر من", lessThanOrEqual: "اصغر من او يساوى", notContains: "لا تحتوى على", notEqual: "لا يساوى", startsWith: "تبدأ بـ" }, resetOperationText: "الوضع الافتراضى" }, headerFilter: { visible: !0 }, showRowLines: !0, groupPanel: { visible: !1, emptyPanelText: "اسحب عمود هنا" }, noDataText: "لايوجد بيانات", columnAutoWidth: !0, width: 1e3, columnChooser: { enabled: !0 }, export: { enabled: !0, fileName: "HousingFurnitureGrid" }, onCellPrepared: function (t) { "header" === t.rowType && "edit" === t.column.command && (t.column.width = 100, t.column.alignment = "center", "HousingDeliveryFromStudentContent" === e.ContentTemplateForTabPopup ? t.cellElement.text(" استلام ") : t.cellElement.text(" حذف ")), "data" === t.rowType && "edit" === t.column.command && ($links = t.cellElement.find(".dx-link"), $links.text(""), 0 === t.row.data.HousingFurnituresOfStudent_Id ? $links.filter(".dx-link-delete").addClass("btn btn-danger btn-sm fa fa-trash-o") : "HousingDeliveryFromStudentContent" === e.ContentTemplateForTabPopup && $links.filter(".dx-link-edit").addClass("btn btn-warning btn-sm fa fa-lock").append(" استلام ")) }, editing: { allowUpdating: !0, allowAdding: !1, allowDeleting: !0, mode: "row", texts: { confirmDeleteMessage: null, deleteRow: "", editRow: "", addRow: "" }, useIcons: !0 }, columns: [{ caption: "مسلسل", width: 100, alignment: "center", cellTemplate: function (e, t) { e.text(t.row.rowIndex + 1) } }, { dataField: "CategoryId", visible: !1 }, { dataField: "CategoryName", caption: "اسم التصنيف", alignment: "center" }, { dataField: "FurnitureId", visible: !1 }, { dataField: "FurnitureName", caption: "اسم قطعة الأثاث", alignment: "center" }], allowColumnResizing: !0, columnResizingMode: "widget", allowColumnReordering: !0, showColumnLines: !0, rowAlternationEnabled: !0, onInitialized: function (t) { e.HousingFurnitureGridInstance = t.component }, onEditingStart: function (t) { var n = t.key; e.InternalPopupShow = !0, e.InternalPopupWidth = 450, e.btnSaveHousingOfStudentsText = "استلام العهدة", e.InternalPopupTitle = "استلام الأصل " + n.FurnitureName, e.HousingFurnituresOfStudent_Id = n.HousingFurnituresOfStudent_Id, e.ContentTemplateForInternalPopup = "HousingDeliveryFromStudentContent-Return", t.cancel = !0 } }, e.btnSaveHousingOfStudents = { bindingOptions: { text: "btnSaveHousingOfStudentsText", visible: "btnSaveHousingOfStudentsVisible" }, type: "success", useSubmitBehavior: !0, onClick: function (n) { if ("StudentHousingContent" === e.ContentTemplateForTabPopup) { if (null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId) return DevExpress.ui.notify({ message: "برجاء إختيار الطالب" }, "Error", 1e4); if (null === e.MDL_HousingDate || void 0 === e.MDL_HousingDate || "" === e.MDL_HousingDate) return DevExpress.ui.notify({ message: "برجاء إختيار تاريخ التسكين" }, "Error", 1e4); if (null === e.MDL_BedLocationId || void 0 === e.MDL_BedLocationId || "" === e.MDL_BedLocationId) return DevExpress.ui.notify({ message: "برجاء إختيار موقع السرير" }, "Error", 1e4); t.SaveStudentHousing(e.MDL_StudentId, e.MDL_HousingDate, e.MDL_HousingNotes, e.MDL_RoomId, e.MDL_BedLocationId).then(function (t) { "" !== t.data ? swal("حدث خطأ", t.data, "error") : (swal("Done!", "تم تسكين الطالب بنجاح", "success"), e.TA_HousingNotes_ReadOnly = !0, e.Fn_DisabledLocationsDetails(!0), e.DB_HousingDateMeladi_ReadOnly = !0, e.btnSaveHousingOfStudentsVisible = !1) }) } else if ("HousingDeliveryToStudentContent" === e.ContentTemplateForTabPopup) { if (null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId) return DevExpress.ui.notify({ message: "برجاء إختيار الطالب" }, "Error", 1e4); if (null === e.MDL_BedLocationId || void 0 === e.MDL_BedLocationId || "" === e.MDL_BedLocationId) return DevExpress.ui.notify({ message: "برجاء إختيار موقع السرير" }, "Error", 1e4); if (null === e.DataSourceHousingFurnitureGrid || void 0 === e.DataSourceHousingFurnitureGrid || "" === e.DataSourceHousingFurnitureGrid || 0 === e.DataSourceHousingFurnitureGrid.length) return DevExpress.ui.notify({ message: "برجاء إسناد قطعة أثاث واحدة على الأقل" }, "Error", 1e4); t.SaveHousingFurniture(e.MDL_StudentId, e.MDL_BedLocationId, e.DataSourceHousingFurnitureGrid).then(function (t) { if ("" !== t.data && void 0 === t.data.StudentFurnitures) swal("حدث خطأ", t.data, "error"); else { swal("Done!", "تم تسليم العهد للطالب بنجاح", "success"), e.DataSourceHousingFurnitureGrid = []; for (var n = 0; n < t.data.StudentFurnitures.length; n++)e.DataSourceHousingFurnitureGrid.push(t.data.StudentFurnitures[n]) } }) } else if ("HousingDeliveryFromStudentContent" === e.ContentTemplateForTabPopup && "HousingDeliveryFromStudentContent-Return" === e.ContentTemplateForInternalPopup) { if (null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId) return DevExpress.ui.notify({ message: "برجاء إختيار الطالب" }, "Error", 1e4); if (null === e.MDL_HousingDate || void 0 === e.MDL_HousingDate || "" === e.MDL_HousingDate) return DevExpress.ui.notify({ message: "برجاء إختيار تاريخ استلام الأصل" }, "Error", 1e4); t.SaveHousingFurnitureReturn(e.MDL_StudentId, e.HousingFurnituresOfStudent_Id, e.MDL_HousingDate, e.MDL_HousingNotes).then(function (t) { if ("" !== t.data && void 0 === t.data.StudentFurnitures) swal("حدث خطأ", t.data, "error"); else { swal("Done!", "تم استلام العهد من الطالب بنجاح", "success"), e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.HousingFurnituresOfStudent_Id = "", e.DataSourceHousingFurnitureGrid = []; for (var n = 0; n < t.data.StudentFurnitures.length; n++)e.DataSourceHousingFurnitureGrid.push(t.data.StudentFurnitures[n]); e.InternalPopupShow = !1, e.ContentTemplateForInternalPopup = "" } }) } else if ("StudentHousingTransferContent" === e.ContentTemplateForTabPopup) { if (null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId) return DevExpress.ui.notify({ message: "برجاء إختيار الطالب" }, "Error", 1e4); if (null === e.MDL_HousingDate_Instance || void 0 === e.MDL_HousingDate_Instance || "" === e.MDL_HousingDate_Instance) return DevExpress.ui.notify({ message: "برجاء إختيار تاريخ الانتقال" }, "Error", 1e4); if (null === e.MDL_BedLocationId_Instance || void 0 === e.MDL_BedLocationId_Instance || "" === e.MDL_BedLocationId_Instance) return DevExpress.ui.notify({ message: "برجاء إختيار موقع السرير" }, "Error", 1e4); if (null !== e.MDL_HousingDate_Instance && void 0 !== e.MDL_HousingDate_Instance && "" !== e.MDL_HousingDate_Instance && null !== e.MDL_HousingDate && void 0 !== e.MDL_HousingDate && "" !== e.MDL_HousingDate && new Date(e.MDL_HousingDate_Instance) < new Date(e.MDL_HousingDate)) return DevExpress.ui.notify({ message: "لايمكن أن يكون تاريخ الانتقال قبل تاريخ التسكين" }, "Error", 1e4); t.SaveStudentHousingTransfer(e.MDL_StudentId, e.MDL_HousingDate_Instance, e.MDL_HousingNotes_Instance, e.MDL_BedLocationId_Instance).then(function (n) { "" !== n.data ? swal("حدث خطأ", n.data, "error") : (swal("Done!", "تم نقل الطالب للسكن الجديد بنجاح", "success"), e.MDL_HousingTypeId_Instance = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationCode_Instance = "", e.MDL_HousingNotes_Instance = "", e.MDL_HousingNumberAuto_Instance = "", e.MDL_HousingDate_Instance = a, e.MDL_HousingTypeId = "", e.MDL_BedLocationId = "", e.MDL_BedLocationCode = "", e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.MDL_HousingNumberAuto = "", t.GetHousingStudent(e.MDL_StudentId).then(function (t) { "" !== t.data && null !== t.data && void 0 !== t.data && (e.PageIsEditing = !0, e.MDL_BedLocationId = t.data.BedLocationId, e.MDL_BedLocationCode = t.data.BedLocationCode, e.MDL_HousingNotes = t.data.NotesOfHosing, e.MDL_RoomId = t.data.LocationDetails.SiteId, e.MDL_HousingDate = String(t.data.HousingDate), e.MDL_FloorId = t.data.LocationDetails.FloorId, e.MDL_ComId = t.data.LocationDetails.CompanyId, e.MDL_UnitId = t.data.LocationDetails.DepartmentId, e.MDL_HousingTypeId = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2) }), t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data })) }) } else if ("StudentHousingReplacementContent" === e.ContentTemplateForTabPopup && "StudentHousingReplacementContent-Notes" === e.ContentTemplateForInternalPopup) { if (null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId) return DevExpress.ui.notify({ message: "برجاء إختيار الطالب الأول" }, "Error", 1e4); if (null === e.MDL_StudentId_Instance || void 0 === e.MDL_StudentId_Instance || "" === e.MDL_StudentId_Instance) return DevExpress.ui.notify({ message: " برجاء إختيار الطالب الثاني" }, "Error", 1e4); if (null === e.MDL_ReplacementDateMeladi || void 0 === e.MDL_ReplacementDateMeladi || "" === e.MDL_ReplacementDateMeladi) return DevExpress.ui.notify({ message: "برجاء إختيار تاريخ التبديل" }, "Error", 1e4); t.SaveHousingReplacement(e.MDL_ReplacementDateMeladi, e.MDL_StudentId, e.MDL_StudentId_Instance, e.MDL_ReplacementNotes_FirstSt, e.MDL_ReplacementNotes_SecondSt).then(function (t) { "" !== t.data ? swal("حدث خطأ", t.data, "error") : swal({ closeOnClickOutside: !1, title: "Done!", text: "تمت عملية تبديل السكن بنجاح", icon: "success" }).then(t => { e.InternalPopupShow = !1, e.TabPopUpShow = !1, e.MDL_BedLocationId = "", e.MDL_BedLocationCode = "", e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.MDL_HousingTypeId = "", e.MDL_HousingNumberAuto = "", e.MDL_ReplacementNotes_FirstSt = "", e.MDL_StudentId_Instance = null, e.MDL_ReplacementNotes_SecondSt = "" }) }) } } }, e.btnShowPopUpReplacementNotes = { bindingOptions: { text: "btnShowPopUpReplacementNotes_Text" }, visible: !0, type: "success", useSubmitBehavior: !0, onClick: function (t) { return null === e.MDL_StudentId || void 0 === e.MDL_StudentId || "" === e.MDL_StudentId ? DevExpress.ui.notify({ message: "برجاء إختيار الطالب الأول" }, "Error", 1e4) : null === e.MDL_StudentId_Instance || void 0 === e.MDL_StudentId_Instance || "" === e.MDL_StudentId_Instance ? DevExpress.ui.notify({ message: " برجاء إختيار الطالب الثاني" }, "Error", 1e4) : null === e.MDL_ReplacementDateMeladi || void 0 === e.MDL_ReplacementDateMeladi || "" === e.MDL_ReplacementDateMeladi ? DevExpress.ui.notify({ message: "برجاء إختيار تاريخ التبديل" }, "Error", 1e4) : (e.DL_Students_Instance_ReadOnly = !0, e.InternalPopupShow = !0, e.InternalPopupWidth = 1250, e.btnSaveHousingOfStudentsVisible = !0, e.InternalPopupTitle = "ملاحظات عملية تبديل السكن", e.btnSaveHousingOfStudentsText = "إجراء عملية التبديل", void (e.ContentTemplateForInternalPopup = "StudentHousingReplacementContent-Notes")) } }, e.TabsPopupOptions = { showTitle: !0, dragEnabled: !1, shadingColor: "rgba(0, 0, 0, 0.69)", closeOnOutsideClick: !1, bindingOptions: { visible: "TabPopUpShow", title: "TabPopUpTitle", contentTemplate: "ContentTemplateForTabPopup", width: "TabPopUpWidth" }, elementAttr: {}, height: "auto", rtlEnabled: !0, onHiding: function () { e.TabPopUpTitle = "", e.PageIsEditing = !1, e.btnSaveHousingOfStudentsText = "", e.btnSaveHousingOfStudentsVisible = !0, e.MDL_BedLocationId = "", e.MDL_BedLocationCode = "", "StudentHousingContent" === e.ContentTemplateForTabPopup ? (e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.MDL_HousingTypeId = "", e.MDL_HousingNumberAuto = "", e.TA_HousingNotes_ReadOnly = !1, e.DB_HousingDateMeladi_ReadOnly = !1, e.btnSaveHousingOfStudentsVisible = !0) : "HousingDeliveryToStudentContent" === e.ContentTemplateForTabPopup ? (e.MDL_CategoryId = "", e.MDL_FurnitureId = "", e.MDL_HousingTypeId = "", e.DataSourceHousingFurnitureGrid = []) : "HousingDeliveryFromStudentContent" === e.ContentTemplateForTabPopup ? (e.MDL_HousingTypeId = "", e.DataSourceHousingFurnitureGrid = []) : "StudentHousingTransferContent" === e.ContentTemplateForTabPopup ? (e.MDL_HousingNumberAuto = "", e.MDL_HousingNumberAuto_Instance = "", e.MDL_HousingTypeId = "", e.MDL_HousingTypeId_Instance = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationCode_Instance = "", e.MDL_HousingDate = "", e.MDL_HousingDate_Instance = "", e.MDL_HousingNotes = "", e.MDL_HousingNotes_Instance = "", e.MDL_ReplacementNotes_FirstSt = "", e.MDL_ReplacementNotes_SecondSt = "", e.TA_HousingNotes_ReadOnly = !1, e.DB_HousingDateMeladi_ReadOnly = !1) : "StudentHousingReplacementContent" === e.ContentTemplateForTabPopup && (e.MDL_ReplacementNumberAuto = "", e.MDL_ReplacementDateMeladi = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationId_Instance = "", e.MDL_BedLocationCode_Instance = "", e.MDL_ReplacementNotes_FirstSt = "", e.MDL_ReplacementNotes_SecondSt = "", e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.MDL_HousingTypeId = "", e.MDL_HousingNumberAuto = "", e.DL_Students_ReadOnly = !1, e.MDL_StudentId_Instance = null, e.TA_HousingNotes_ReadOnly = !1, e.TA_HousingNotes_ReadOnly_Instance = !1), e.ClearHomePage_Fn(), e.ReInitializeHomePage_Fn(), e.ContentTemplateForTabPopup = "" }, onInitialized(t) { e.TabsPopupInstance = t.component } }, e.InternalPopup = { showTitle: !0, dragEnabled: !1, shadingColor: "rgba(0, 0, 0, 0.69)", closeOnOutsideClick: !1, bindingOptions: { visible: "InternalPopupShow", title: "InternalPopupTitle", contentTemplate: "ContentTemplateForInternalPopup", width: "InternalPopupWidth" }, height: "auto", rtlEnabled: !0, onHiding: function () { "HousingDeliveryFromStudentContent-Return" === e.ContentTemplateForInternalPopup ? (e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.HousingFurnituresOfStudent_Id = "", e.InternalPopupTitle = "", e.btnSaveHousingOfStudentsText = "", e.ContentTemplateForInternalPopup = "") : "StudentHousingReplacementContent-Notes" === e.ContentTemplateForInternalPopup && (e.DL_Students_Instance_ReadOnly = !1) }, onInitialized(t) { e.InternalPopupInstance = t.component } }, e.FoundId_Fn = function (e) { return o.find(t => t.Text === e).Id }, e.Fn_DisabledLocationsDetails = function (t) { e.DL_ComsDisabled = t, e.DL_UnitsDisabled = t, e.DL_RoomsDisabled = t, e.DL_FloorsDisabled = t, e.DL_HousingTypesDisabled = t, e.DL_BedsDisabled = t }, e.Fn_DisabledLocationsDetails(!0), e.Fn_DisabledLocationsDetails_Instance = function (t) { e.DL_ComsDisabled_Instance = t, e.DL_UnitsDisabled_Instance = t, e.DL_RoomsDisabled_Instance = t, e.DL_FloorsDisabled_Instance = t, e.DL_HousingTypesDisabled_Instance = t, e.DL_BedsDisabled_Instance = t }, e.Date_Format_Fn = function (e) { const t = e.split("/"); return t[1] + "/" + t[0] + "/" + t[2] }, e.ReInitializeHomePage_Fn = function () { null !== e.MDL_StudentId && "" !== e.MDL_StudentId ? (e.PageIsEditing = !0, e.TA_HousingNotes_ReadOnly = !0, e.DB_HousingDateMeladi_ReadOnly = !0, t.GetStudentDataByID(e.MDL_StudentId).then(function (t) { e.MDL_FacultiyName = t.data.FacultiyName, e.MDL_NationalityName = t.data.NationalityName, e.MDL_MobileNumber = t.data.MobileNumber, e.MDL_BirthCityName = t.data.BirthCityName, e.MDL_LevelName = t.data.LevelName, e.MDL_StatusName = t.data.StatusName, e.MDL_BirthDate = e.Date_Format_Fn(t.data.BirthDate), e.MDL_StudyTypeName = t.data.StudyTypeName, e.MDL_DegreeName = t.data.DegreeName, e.MDL_GenderName = t.data.GenderName }), t.GetHousingStudent(e.MDL_StudentId).then(function (t) { null !== t.data.BedLocationId && "" !== t.data.BedLocationId && void 0 !== t.data.BedLocationId && (e.MDL_BedLocationId = t.data.BedLocationId, e.MDL_BedLocationCode = t.data.BedLocationCode, e.MDL_HousingNotes = t.data.NotesOfHosing, e.MDL_RoomId = t.data.LocationDetails.SiteId, e.MDL_FloorId = t.data.LocationDetails.FloorId, e.MDL_ComId = t.data.LocationDetails.CompanyId, e.MDL_UnitId = t.data.LocationDetails.DepartmentId, e.MDL_HousingDate = e.Date_Format_Fn(t.data.HousingDate), e.MDL_HousingTypeId = !1 === t.data.LocationDetails.IsFamilial ? 1 : 2) }), t.GetNextHousingNo(e.MDL_StudentId, 0).then(function (t) { e.MDL_HousingNumberAuto = t.data })) : e.ClearHomePage_Fn() }, e.ClearHomePage_Fn = function () { e.PageIsEditing = !1, e.TA_HousingNotes_ReadOnly = !1, e.DB_HousingDateMeladi_ReadOnly = !1, e.MDL_BedLocationId = "", e.MDL_BedLocationCode = "", e.MDL_FacultiyName = "", e.MDL_NationalityName = "", e.MDL_MobileNumber = "", e.MDL_BirthCityName = "", e.MDL_LevelName = "", e.MDL_StatusName = "", e.MDL_BirthDate = "", e.MDL_StudyTypeName = "", e.MDL_DegreeName = "", e.MDL_GenderName = "", e.MDL_HousingDate = "", e.MDL_HousingNotes = "", e.MDL_HousingNumberAuto = "", e.MDL_HousingTypeId = "" } }]);